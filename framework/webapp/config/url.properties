###############################################################################
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
###############################################################################
####
# OFBiz Global URL Settings - WebSite specific settings found in WebSite entity
####

# HTTPS Port (Secure port)
port.https.enabled=Y
port.https=8443
force.https.host=

# HTTP Port (Not Secure port)
port.http=8080
force.http.host=

# SCIPIO: if set to Y, the ports and hosts above have priority over the information in the current request when building links.
# Otherwise, they are only used as defaults/fallbacks, if request values not present/applicable.
# Default: N (current request values have priority)
# NOTE: the scipio default ("N") is different from the implicit stock Ofbiz default ("Y").
# NOTE: this does not control values from WebSite entity; currently WebSite entity always override values above AND from request.
override.request.host.port=

# If you want to use HTTP then set no.http=N. Else all requests will use HTTPS except if put in the http.request-map.list  
# SCIPIO: 2018-07-09: We do NOT force HTTPS using no.http=Y, because it makes the controller definitions confusing and rigid.
# INSTEAD, we have changed the default controller request-map security https to https="true", and adjusted existing requests.
# It is easy to find out which controller requests are plain http with a simple search for https="false" in "*controller*.xml".
# NOTE: The http.request-map.list below is ignored in Scipio by default! It only takes effect if you set no.http=Y
no.http=N
http.request-map.list=SOAPService,xmlrpc,viewShipmentLabel

# SCIPIO: URL path prefix appended between the domain/port and the webapp context path in generated links, 
# for webapp and navigation links (@pageUrl). It must start with a slash but end with no slash.
# This can be overridden using WebSite.webappPathPrefix entity field, which has top priority over the ones here. (added 2018-07-27)
webapp.url.path.prefix=

# SCIPIO: Experimental - WARN: 2018-08-08: may not work properly with inter-webapp links at this time - do not rely on this feature.
# You can also specify the name of an HTTP header from which to read the webapp path prefix, which can be set by frontend 
# load balancers (nginx, apache, etc.); this header gets priority over webapp.url.path.prefix by default (unless override.request.host.port set above).
# This can be overridden using WebSite.webappPathPrefix entity field, which has top priority over the ones here. (added 2018-07-27)
webapp.url.path.prefix.httpHeader=

# SCIPIO: Controls globally how the URL path prefix is added. Values:
# * true: Include the prefix when building the raw URLs - before URL rewriting is applied (pre-encoding).
#         WARN: This requires very special handling in urlrewrite.xml outbound-rules and introduces limitations.
# * false: The prefix is not added using link-building utilities;
#          it is fully left up to urlrewrite.xml files to add it using outbound-rules (post-encoding).
# This can be set per-webapp in web.xml via context-param "urlWebappPathPrefixUrlBuild" (not in WebSite entity).
webapp.url.path.prefix.urlBuild=true

# SCIPIO: For live webapp requests (only): If true, the system will only append
# the webapp path prefix if the requests appears forwarded from a front-end balancer,
# while direct requests to server will omit it.
# Set this to true to be able to access server directly (debugging/testing help).
# NOTE: This requires your load balancer to specify "X-Forwarded-Proto" header.
webapp.url.path.prefix.onlyIfForward=false

# SCIPIO: Manual inter-webapp URL rewriting filter
# When set to "auto", webapps that don't have UrlRewriteFilter in their web.xml get a special
# behavior when generating links to other webapps: a special manual filter code is run so
# that the target webapp's urlrewrite.xml is invoked and do the correct URL transformations.
# This setting controls the global default, which can be overridden per-webapp using the web.xml
# context-param urlManualInterWebappFilter. Values: auto, false (added 2018-08-08)
webapp.url.interwebapp.manualFilter=auto

# Static Content URLs to make it easy to move the serving load for static content to other machines
# -- these are for general content such as images, js & css files, or non-dynamic HTML files
content.url.prefix.secure=
content.url.prefix.standard=

# SCIPIO: Optional alternative content prefixes for "local"
# <@contentUrl type="local"/> explicit and some implied links, such as XSL-FO (PDF) <fo:external-graphic>
# elements that use @contentUrl. This can be used to speed up generation of
# documents that rely on hosted resources by using local resources instead of fetching remote resources
# through the normal content prefix above. The fastest is to use localhost. 
# In general <@contentUrl type="[type]"/> maps to: [type].content.url.prefix.[secure|standard] 
# Recommended values for production (for both secure and standard): http://localhost:8080
# NOTE: You can put a plain "http" address for secure (faster for local when localhost). Added 2018-08-17.
local.content.url.prefix.secure=
local.content.url.prefix.standard=

# SCIPIO: If true, all the *content.url.prefix* settings can be be specified
# in SystemProperty entity, in addition to WebSite entity. This can be useful for multitenant
# but may add small and needless overhead to other systems. Added 2018-08-17.
content.url.settings.entitySysProp=false

# Here you can set the domain string to use for new cookies
cookie.domain=

# Exclude jsessionid for User-Agents (separated by comma's)
link.remove_lsessionid.user_agent_list = googlebot,yahoo,msnbot,mediapartners-google

# Should HTTP parameters sent to services require encryption?
# This is generally advised for more secure webapps as it makes it more difficult to spoof requests (XSRF) that change data. 
service.http.parameters.require.encrypted=Y

# FOP configurable folder
fop.path=component://webapp/config
# Font path for FOP
fop.font.base.path=component://webapp/config/

