<?xml version="1.0" encoding="UTF-8"?>
<!--
This file is subject to the terms and conditions defined in the
files 'LICENSE' and 'NOTICE', which are part of this source
code package.
-->

<screens xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:noNamespaceSchemaLocation="http://ofbiz.apache.org/dtds/widget-screen.xsd">
        
    <!-- SCIPIO: Common settings for other *Screens.xml files in this app that primarily use decorators referenced using parameters.mainDecoratorLocation -->
    <screen-settings name="common-settings"><!-- all settings are currently valid/needed for this file as well, so omit: active="false" -->
        <decorator-screen-settings default-fallback-location="component://order/widget/ordermgr/CommonScreens.xml"/>
    </screen-settings>
        
    <!-- SCIPIO: The settings for this file (active) -->
    <screen-settings name="local-settings">
        <!-- These settings are automatically included in all *Screens.xml files in the same folder as this CommonScreens.xml file or any subfolder without its own CommonScreens.xml -->
        <auto-include-settings>
            <include-settings as-name="local-settings" name="common-settings" location="component://order/widget/ordermgr/CommonScreens.xml"/>
        </auto-include-settings>
    </screen-settings>
        
    <!-- SCIPIO: Actions automatically included at beginning of every render request, for our webapp (discovered via web.xml, mainDecoratorLocation) -->
    <screen name="webapp-common-actions">
        <actions>
            <!-- Make the main side bar name/location available to all (without need for globals) -->
            <include-screen-actions name="MainSideBarMenu"/>
            <set field="mainSideBarMenuCfg" from-field="menuCfg"/>
            <set field="mainComplexMenuCfg" from-field="menuCfg"/>
            <set field="menuCfg" value=""/>
        </actions>
    </screen>
        
    <screen name="main-decorator">
        <section>
            <actions>
                <set field="activeApp" value="ordermgr" global="true"/>
                
                <!-- base/top/specific map first, then more common map added for shared labels -->
                <property-map resource="EcommerceUiLabels" map-name="uiLabelMap" global="true"/><!-- SCIPIO: Some shop labels may be needed due to sharing code (not ideal, FIXME/remove?) -->
                <property-map resource="OrderUiLabels" map-name="uiLabelMap" global="true"/>
                <property-map resource="OrderErrorUiLabels" map-name="uiLabelMap" global="true"/>
                <property-map resource="AccountingUiLabels" map-name="uiLabelMap" global="true"/>
                <property-map resource="HumanResUiLabels" map-name="uiLabelMap" global="true"/>
                <property-map resource="ProductUiLabels" map-name="uiLabelMap" global="true"/>
                <property-map resource="ManufacturingUiLabels" map-name="uiLabelMap" global="true"/>
                <property-map resource="WorkEffortUiLabels" map-name="uiLabelMap" global="true"/>
                <property-map resource="PartyUiLabels" map-name="uiLabelMap" global="true"/>
                <property-map resource="ContentUiLabels" map-name="uiLabelMap" global="true"/>
                <property-map resource="CommonUiLabels" map-name="uiLabelMap" global="true"/>

                <set field="layoutSettings.companyName" from-field="uiLabelMap.OrderCompanyName" global="true"/>
                <set field="layoutSettings.companySubtitle" from-field="uiLabelMap.OrderCompanySubtitle" global="true"/>
                <!-- layoutSettings.headerImageUrl can be used to specify an application specific logo; if not set,
                     then the global layoutSettings.commonHeaderImageUrl (specified in GlobalDecorator) will be used. -->
                <!--<set field="layoutSettings.headerImageUrl" value="/images/ofbiz_logo.gif" global="true"/>-->
                <!-- <set field="layoutSettings.headerMiddleBackgroundUrl" value="" global="true"/> -->
                <!-- <set field="layoutSettings.headerRightBackgroundUrl" value="" global="true"/> -->
                <set field="applicationMenuName" value="OrderAppBar" global="true"/>
                <set field="applicationMenuLocation" value="component://order/widget/ordermgr/OrderMenus.xml" global="true"/>
                <set field="applicationTitle" value="${uiLabelMap.Order}" global="true"/>
                <!-- globally parameterize the link to a customer's detail information, to help with cases when such details are accessed via external application. -->
                <set field="customerDetailLink" value="/partymgr/control/viewprofile?partyId=" global="true"/>
                
                <!-- SCIPIO: This uses activeSubMenu/activeSubMenuItem to automatically determine activeMainMenuItem -->
                <set field="menuCfg" from-field="mainComplexMenuCfg"/>
                <include-screen-actions name="DeriveComplexSideBarMenuItems" location="component://common/widget/CommonScreens.xml"/>
            </actions>
            <widgets>
                <!--<decorator-screen name="ApplicationDecorator" location="component://commonext/widget/CommonScreens.xml"/>-->
                <!-- with auto-decorator-section-include="true" (2016-10-30: true now default, may be omitted), the decorator-sections not declared here like "pre-body" will still be passed and not lost,
                     so free to use main-decorator to insert sections and elements without forcing whole-page structure. use-when also available on decorator-section. -->
                <decorator-screen name="ApplicationDecorator" location="component://commonext/widget/CommonScreens.xml">
                    <decorator-section name="left-column" use-when="${context.widePage != true}"> <!-- override-by-auto-include="true" -->
                        <section>
                            <condition>
                                <not><if-empty-section section-name="left-column" /></not>
                            </condition>
                            <widgets>
                                <decorator-section-include name="left-column"/>
                            </widgets>
                            <fail-widgets>
                                <!-- provide default column for all others -->
                                <include-screen name="DefMainSideBarMenu" location="${parameters.mainDecoratorLocation}"/>
                            </fail-widgets>
                        </section>
                    </decorator-section>
                    <decorator-section name="body">
                        <decorator-section-include name="body"/>
                    </decorator-section>
                </decorator-screen>
            </widgets>
        </section>
    </screen>
    
    <!-- SCIPIO: App-wide common decorator, wrapper around main-decorator; expected to have globally unique name. See Admin app CommonScreens.xml for more info. -->
    <screen name="CommonOrderAppDecorator">
        <section>
            <actions>
                <condition-to-field field="commonOrderAppBasePermCond" type="Boolean" only-if-field="empty">
                    <!-- do check for ORDERMGR, _VIEW permission -->
                    <if-has-permission permission="ORDERMGR" action="_VIEW"/>
                </condition-to-field>
            </actions>
            <widgets>
                <decorator-screen name="main-decorator" location="${parameters.mainDecoratorLocation}">
                    <decorator-section name="left-column" use-when="${context.widePage != true}" override-by-auto-include="true">
                        <include-screen name="CommonOrderAppSideBarMenu"/>
                    </decorator-section>
                    <decorator-section name="body">
                        <section>
                            <condition>
                                <if-true field="commonOrderAppBasePermCond"/>
                            </condition>
                            <widgets>
                                <decorator-section-include name="body"/>
                            </widgets>
                            <fail-widgets>
                                <label style="common-msg-error-perm">${uiLabelMap.OrderViewPermissionError}</label>
                            </fail-widgets>
                        </section>
                    </decorator-section>
                </decorator-screen>
            </widgets>
        </section>
    </screen>
    
    <screen name="CommonQuoteDecorator">
        <section>
            <actions>
                <set field="activeSubMenu" from-field="activeSubMenu" default-value="component://order/widget/ordermgr/OrderMenus.xml#Quote" />
                <set field="quoteId" from-field="parameters.quoteId"/>
                <set field="commonSideBarMenu.condList[]" type="Boolean" value="${not empty context.quoteId}"/>
            </actions>
            <widgets>
                <decorator-screen name="CommonOrderAppDecorator" location="${parameters.mainDecoratorLocation}">
                    <decorator-section name="body">
                        <section>
                            <condition>
                                <not><if-empty field="quoteId"/></not>
                            </condition>
                            <widgets>
                                <include-menu name="QuoteSubTabBar" location="component://order/widget/ordermgr/OrderMenus.xml"/>
                            </widgets>
                        </section>
                        <decorator-section-include name="body"/>
                    </decorator-section>
                </decorator-screen>
            </widgets>
        </section>
    </screen>
    
    <!-- SCIPIO: NOTE: this is now only for screens that are child of "Find Orders" (NOT orderlist, main, etc.) -->
    <screen name="CommonOrderDecorator">
        <section>
            <actions>
                <set field="activeSubMenu" from-field="activeSubMenu" default-value="component://order/widget/ordermgr/OrderMenus.xml#Order" />
                <set field="commonSideBarMenu.condList[]" type="Boolean" value="${not empty context.orderId}"/>
            </actions>
            <widgets>
                <decorator-screen name="CommonOrderAppDecorator" location="${parameters.mainDecoratorLocation}">
                </decorator-screen>
            </widgets>
        </section>
    </screen>
    
    <screen name="CommonOrderCheckoutDecorator">
        <section>
            <actions>
                <set field="activeSubMenu" from-field="activeSubMenu" default-value="" />
                <set field="activeSubMenuItem" from-field="activeSubMenuItem" default-value="orderentry"/>
                <set field="checkoutType" from-field="checkoutType" default-value="${parameters.checkoutType}"/><!-- SCIPIO -->
                <script location="component://order/webapp/ordermgr/WEB-INF/actions/entry/SetShoppingCart.groovy"/>
                <script location="component://order/webapp/ordermgr/WEB-INF/actions/entry/SetCheckOutTabBar.groovy"/>
                <set field="commonSideBarMenu.condList[]" type="Boolean" value="${not empty context.orderId}"/>
            </actions>
            <widgets>
                <decorator-screen name="CommonOrderAppDecorator" location="${parameters.mainDecoratorLocation}">
                    <decorator-section name="body">
                        <platform-specific>
                            <html><html-template location="component://order/webapp/ordermgr/entry/OrderEntryCheckOutTabBar.ftl"/></html>
                        </platform-specific>
                        <decorator-section-include name="body"/>
                    </decorator-section>
                </decorator-screen>
            </widgets>
        </section>
    </screen>
    
    <screen name="CommonPartyDecorator">
        <section>
            <actions>
                <set field="activeSubMenu" from-field="activeSubMenu" default-value="" />
                <set field="activeSubMenuItem" from-field="activeSubMenuItem" default-value=""/>
            </actions>
            <widgets>
                <decorator-screen name="CommonOrderAppDecorator" location="${parameters.mainDecoratorLocation}">
                </decorator-screen>
            </widgets>
        </section>
    </screen>

    <screen name="CommonPopUpDecorator">
        <section>
            <actions>
                <!-- base/top/specific map first, then more common map added for shared labels -->
                <property-map resource="OrderUiLabels" map-name="uiLabelMap" global="true"/>
                <property-map resource="OrderErrorUiLabels" map-name="uiLabelMap" global="true"/>
                <property-map resource="AccountingUiLabels" map-name="uiLabelMap" global="true"/>
                <property-map resource="ProductUiLabels" map-name="uiLabelMap" global="true"/>
                <property-map resource="ManufacturingUiLabels" map-name="uiLabelMap" global="true"/>
                <property-map resource="WorkEffortUiLabels" map-name="uiLabelMap" global="true"/>
                <property-map resource="PartyUiLabels" map-name="uiLabelMap" global="true"/>
                <property-map resource="ContentUiLabels" map-name="uiLabelMap" global="true"/>

                <set field="layoutSettings.companyName" from-field="uiLabelMap.OrderCompanyName" global="true"/>
                <set field="layoutSettings.companySubtitle" from-field="uiLabelMap.OrderCompanySubtitle" global="true"/>
            </actions>
            <widgets>
                <decorator-screen name="LookupDecorator" location="component://common/widget/CommonScreens.xml">
                </decorator-screen>
            </widgets>
        </section>
    </screen>
    
    <screen name="CommonReportDecorator">
        <section>
            <actions>
                <set field="activeSubMenu" from-field="activeSubMenu" default-value="" />
                <set field="activeSubMenuItem" from-field="activeSubMenuItem" default-value="reports"/>
            </actions>
            <widgets>
                <decorator-screen name="CommonOrderAppDecorator" location="${parameters.mainDecoratorLocation}">
                </decorator-screen>
            </widgets>
        </section>
    </screen>
    
    <screen name="CommonRequestDecorator">
        <section>
            <actions>
                <set field="activeSubMenu" from-field="activeSubMenu" default-value="component://order/widget/ordermgr/OrderMenus.xml#Request" />
                <set field="custRequestId" from-field="parameters.custRequestId"/>
                <entity-one entity-name="CustRequest" value-field="custRequest"/>
                <set field="commonSideBarMenu.condList[]" type="Boolean" value="${not empty context.custRequest}"/>
            </actions>
            <widgets>
                <decorator-screen name="CommonOrderAppDecorator" location="${parameters.mainDecoratorLocation}">
                    <decorator-section name="body">
                        <include-menu name="RequestSubTabBar" location="component://order/widget/ordermgr/OrderMenus.xml"/>
                        <container>
                            <section>
                                <condition>
                                    <not><if-empty field="custRequest"/></not>
                                </condition>
                                <widgets>
                                    <label style="heading">${custRequest.custRequestName} [${custRequest.custRequestId}] </label>
                                </widgets>
                            </section>
                        </container>
                        <decorator-section-include name="body"/>
                    </decorator-section>
                </decorator-screen>
            </widgets>
        </section>
    </screen>
    
    <!-- SCIPIO: NOTE: this is for a SINGLE requirement (needs special case menu) -->
    <screen name="CommonRequirementDecorator">
        <section>
            <actions>
                <set field="activeSubMenu" from-field="activeSubMenu" default-value="component://order/widget/ordermgr/OrderMenus.xml#Requirement" />                
                <!-- TODO?: this is actually confusing in some of the sub-screens currently
                <set field="titleFormat" from-field="titleFormat" default-value="\${finalTitle}${groovy: context.requirement ? (' ' + context.requirementId) : ''}"/> -->
            </actions>
            <widgets>
                <decorator-screen name="CommonOrderAppDecorator" location="${parameters.mainDecoratorLocation}">
                    <decorator-section name="left-column" use-when="${context.widePage != true}" override-by-auto-include="true">
                        <section>
                            <condition>
                                <not><if-empty field="requirementId"/></not>
                            </condition>
                            <widgets>
                                <include-screen name="CommonOrderAppSideBarMenu"/>
                            </widgets>
                            <fail-widgets>
                                <!-- special: fall back to the previous-level menu; this just makes CommonRequirementDecorator more adaptive -->
                                <section share-scope="false">
                                    <actions>
                                        <set field="activeSubMenu" value="component://order/widget/ordermgr/OrderMenus.xml#Requirements" />
                                        <set field="activeSubMenuItem" value="FindRequirements"/>
                                    </actions>
                                    <widgets>
                                        <include-screen name="CommonOrderAppSideBarMenu"/>
                                    </widgets>
                                </section>
                            </fail-widgets>
                        </section>
                    </decorator-section>
                    <decorator-section name="body">
                        <section>
                            <condition><not><if-empty field="requirement"/></not></condition>
                            <widgets>
                                <label style="heading">${uiLabelMap.OrderRequirement} [${requirementId}]</label>
                            </widgets>
                        </section>
                        <decorator-section-include name="body"/>
                    </decorator-section>
                </decorator-screen>
            </widgets>
        </section>
    </screen>
    
    <!-- SCIPIO: NOTE: this is for when no requirement selected yet -->
    <screen name="CommonRequirementsDecorator">
        <section>
            <actions>
                <set field="activeSubMenu" from-field="activeSubMenu" default-value="Requirements" />
            </actions>
            <widgets>
                <decorator-screen name="CommonOrderAppDecorator" location="${parameters.mainDecoratorLocation}">
                    <decorator-section name="body">
                        <container>
                            <link target="EditRequirement" text="${uiLabelMap.OrderNewRequirement}" style="${styles.link_nav} ${styles.action_add}"/>
                        </container>
                        <decorator-section-include name="body"/>
                    </decorator-section>
                </decorator-screen>
            </widgets>
        </section>
    </screen>
    
    <screen name="CommonReturnDecorator">
        <section>
            <actions>
                <set field="activeSubMenu" from-field="activeSubMenu" default-value="component://order/widget/ordermgr/OrderMenus.xml#Return" />
                <set field="commonSideBarMenu.condList[]" type="Boolean" value="${not empty context.returnId}"/>
            </actions>
            <widgets>
                <decorator-screen name="CommonOrderAppDecorator" location="${parameters.mainDecoratorLocation}">
                    <decorator-section name="body">
                        <platform-specific>
                            <html>
                                <!-- SCIPIO: NOTE: this is redundant, but leaving for now... (TODO: REVIEW) -->
                                <html-template location="component://order/webapp/ordermgr/return/returnLinks.ftl"/>
                            </html>
                        </platform-specific>
                        <decorator-section-include name="body"/>
                    </decorator-section>
                </decorator-screen>
            </widgets>
        </section>
    </screen>
    
    <!-- SCIPIO: Main SideBar Menu (see component://common/widget/CommonScreens.xml#ComplexSideBarMenu for available arguments and Admin app CommonScreens.xml for more info) -->
    <screen name="MainSideBarMenu">
        <section>
            <actions>
                <set field="menuCfg.location" value="component://order/widget/ordermgr/OrderMenus.xml"/>
                <set field="menuCfg.name" value="OrderAppSideBar"/>
                <set field="menuCfg.defLocation" value="component://order/widget/ordermgr/OrderMenus.xml"/>
            </actions>
            <widgets>
                <include-screen location="component://common/widget/CommonScreens.xml" name="ComplexSideBarMenu"/>
            </widgets>
        </section>
    </screen>
    
    <!-- SCIPIO: Default Main SideBar Menu, version of MainSideBarMenu that disregards screen's selected/active sub-menu -->
    <screen name="DefMainSideBarMenu">
        <section>
            <actions>
                <script location="component://common/webcommon/WEB-INF/actions/includes/scipio/PrepareDefComplexSideBarMenu.groovy"/>
            </actions>
            <widgets>
                <include-screen name="MainSideBarMenu"/>
            </widgets>
        </section>
    </screen>
    
    <!-- SCIPIO: Common SideBar Menu inclusion logic, for/from Common*AppDecorator, with application-specific logic 
        (see component://common/widget/CommonScreens.xml#CommonSideBarMenu for available arguments and Admin app CommonScreens.xml for more info) -->
    <screen name="CommonOrderAppSideBarMenu">
        <section>
            <actions>
                <condition-to-field field="commonOrderAppBasePermCond" type="Boolean" only-if-field="empty">
                    <!-- do check for ORDERMGR, _VIEW permission -->
                    <if-has-permission permission="ORDERMGR" action="_VIEW"/>
                </condition-to-field>
                <set field="commonSideBarMenu.cond" from-field="commonSideBarMenu.cond" type="Boolean" default-value="${commonOrderAppBasePermCond}"/>
            </actions>
            <widgets>
                <include-screen name="CommonSideBarMenu" location="component://common/widget/CommonScreens.xml"/>
            </widgets>
        </section>
    </screen>
    
</screens>

