<?xml version="1.0" encoding="UTF-8" ?>
<!--
This file is subject to the terms and conditions defined in the
files 'LICENSE' and 'NOTICE', which are part of this source
code package.
-->

<services xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:noNamespaceSchemaLocation="http://ofbiz.apache.org/dtds/services.xsd">
    <description>Party Component Services</description>
    <vendor>OFBiz</vendor>
    <version>1.0</version>

    <!-- AddressMatchMap services 
    
        SCIPIO: DEPRECATED
        Has never been implemented as discussed here 
        http://ofbiz.135035.n4.nabble.com/Address-match-map-is-used-for-td157597.html
    -->
    <service name="createAddressMatchMap" engine="simple" default-entity-name="AddressMatchMap" auth="true"
            location="component://party/script/org/ofbiz/party/party/PartyServices.xml" invoke="createAddressMatchMap">
        <description>Create an AddressMatchMap record</description>
        <deprecated use-instead="none">SCIPIO: Address Match Map is not used anywhere in the platform</deprecated>
        <permission-service service-name="partyBasePermissionCheck" main-action="CREATE"/>
        <auto-attributes mode="IN" include="pk" optional="false"/>
        <auto-attributes mode="IN" include="nonpk" optional="true"/>
    </service>
    <service name="importAddressMatchMapCsv" engine="java" auth="true"
            location="org.ofbiz.party.party.PartyServices" invoke="importAddressMatchMapCsv">
        <description>Import a CSV (name,value) of AddressMatchMap records</description>
        <deprecated use-instead="none">SCIPIO: Address Match Map is not used anywhere in the platform</deprecated>
        <permission-service service-name="partyBasePermissionCheck" main-action="CREATE"/>
        <attribute name="uploadedFile" type="java.nio.ByteBuffer" mode="IN" optional="false"/>
        <attribute name="_uploadedFile_fileName" type="String" mode="IN" optional="false"/>
        <attribute name="_uploadedFile_contentType" type="String" mode="IN" optional="false"/>
    </service>
    <service name="removeAddressMatchMap" engine="simple" default-entity-name="AddressMatchMap" auth="true"
            location="component://party/script/org/ofbiz/party/party/PartyServices.xml" invoke="deleteAddressMatchMap">
        <description>Delete an AddressMatchMap record</description>
        <deprecated use-instead="none">SCIPIO: Address Match Map is not used anywhere in the platform</deprecated>
        <permission-service service-name="partyBasePermissionCheck" main-action="DELETE"/>
        <auto-attributes mode="IN" include="pk" optional="false"/>
    </service>
    <service name="clearAddressMatchMap" engine="simple" default-entity-name="AddressMatchMap" auth="true"
            location="component://party/script/org/ofbiz/party/party/PartyServices.xml" invoke="clearAddressMatchMap">
        <description>Delete an AddressMatchMap record</description>
        <deprecated use-instead="none">SCIPIO: Address Match Map is not used anywhere in the platform</deprecated>
        <permission-service service-name="partyBasePermissionCheck" main-action="DELETE"/>
    </service>

    <!-- Party services -->
    <service name="deleteParty" engine="java"
            location="org.ofbiz.party.party.PartyServices" invoke="deleteParty" auth="true">
        <description>Delete a Party</description>
        <attribute name="partyId" type="String" mode="IN" optional="true"/>
    </service>
    <service name="setPartyStatus" engine="java"
            location="org.ofbiz.party.party.PartyServices" invoke="setPartyStatus" auth="true">
        <description>Set the party status. Requires PARTYMGR_UPDATE or PARTYMGR_STS_UPDATE permission. The change to statusId must be defined in StatusValidChange, otherwise
            this service will fail. The result is the original statusId, so that ECA conditions can check if a status has actually changed.</description>
        <permission-service service-name="partyStatusPermissionCheck" main-action="UPDATE"/>
        <attribute name="partyId" type="String" mode="IN" optional="false"/>
        <attribute name="statusId" type="String" mode="IN" optional="false"/>
        <attribute name="statusDate" type="Timestamp" mode="IN" optional="true"/>
        <attribute name="oldStatusId" type="String" mode="OUT" optional="false"/>
    </service>

    <service name="createPerson" engine="java" default-entity-name="Person"
            location="org.ofbiz.party.party.PartyServices" invoke="createPerson" auth="false">
        <description>Create a Person</description>
        <auto-attributes mode="IN" include="pk" optional="true"/>
        <auto-attributes mode="OUT" include="pk" optional="false"/>
        <auto-attributes mode="IN" include="nonpk" optional="true"/>
        <attribute name="preferredCurrencyUomId" type="String" mode="IN" optional="true"/>
        <attribute name="description" type="String" mode="IN" optional="true"/>
        <attribute name="externalId" type="String" mode="IN" optional="true"/>
        <attribute name="statusId" type="String" mode="IN" optional="true"/>
        <!-- First and Last names are here optional. This allows to implement simple create user login screen where user is able create account 
            in system with username and password and then later populate rest of the account information. -->
<!--        <override name="firstName" optional="false"/>
        <override name="lastName" optional="false"/>
-->    </service>
    <service name="createPersonAndUserLogin" engine="simple" require-new-transaction="true"
            location="component://party/script/org/ofbiz/party/party/PartySimpleMethods.xml" invoke="createPersonAndUserLogin" auth="false">
        <description>Create a Person and UserLogin</description>
        <implements service="createUserLogin"/>
        <auto-attributes entity-name="Person" mode="IN" include="nonpk" optional="true"/>
        <auto-attributes entity-name="Party" mode="IN" include="nonpk" optional="true"/>
        <attribute name="partyId" type="String" mode="INOUT" optional="true" entity-name="Person"/>
        <attribute name="newUserLogin" type="Map" mode="OUT" optional="false"/>
    </service>
    <service name="updatePerson" engine="java" default-entity-name="Person"
            location="org.ofbiz.party.party.PartyServices" invoke="updatePerson" auth="true">
        <description>Update a Person</description>
<!--        <required-permissions join-type="AND">
            <check-permission permission="update:party:${partyId}"/>
        </required-permissions> -->
        <permission-service service-name="partyGroupPermissionCheck" main-action="UPDATE"/>
        <auto-attributes mode="IN" include="pk" optional="true"><!-- if no partyId specified will use userLogin.partyId --></auto-attributes>
        <auto-attributes mode="IN" include="nonpk" optional="true"/>
        <attribute name="preferredCurrencyUomId" type="String" mode="IN" optional="true"/>
        <attribute name="description" type="String" mode="IN" optional="true"/>
        <attribute name="externalId" type="String" mode="IN" optional="true"/>
        <attribute name="statusId" type="String" mode="IN" optional="true"/>
        <override name="firstName" optional="false"/>
        <override name="lastName" optional="false"/>
    </service>
    <service name="createPartyGroup" engine="java" default-entity-name="PartyGroup"
            location="org.ofbiz.party.party.PartyServices" invoke="createPartyGroup" auth="false">
        <description>Create a PartyGroup</description>
        <auto-attributes mode="INOUT" include="pk" optional="true"/>
        <auto-attributes mode="IN" include="nonpk" optional="true"/>
        <attribute name="partyTypeId" type="String" mode="IN" optional="true"/>
        <attribute name="description" type="String" mode="IN" optional="true"/>
        <attribute name="preferredCurrencyUomId" type="String" mode="IN" optional="true"/>
        <attribute name="externalId" type="String" mode="IN" optional="true"/>
        <attribute name="statusId" type="String" mode="IN" optional="true"/>
        <override name="groupName" optional="false"/>
        <override name="comments" allow-html="any"/>
    </service>
    <service name="updatePartyGroup" engine="java" default-entity-name="PartyGroup"
            location="org.ofbiz.party.party.PartyServices" invoke="updatePartyGroup" auth="true">
        <description>Update a PartyGroup</description>
        <permission-service service-name="partyGroupPermissionCheck" main-action="UPDATE"/>
        <auto-attributes mode="IN" include="pk" optional="true"/>
        <auto-attributes mode="IN" include="nonpk" optional="true"/>
        <attribute name="description" type="String" mode="IN" optional="true"/>
        <attribute name="partyTypeId" type="String" mode="IN" optional="true"/>
        <attribute name="preferredCurrencyUomId" type="String" mode="IN" optional="true"/>
        <attribute name="externalId" type="String" mode="IN" optional="true"/>
        <attribute name="statusId" type="String" mode="IN" optional="true"/>
        <override name="comments" allow-html="any"/>
    </service>

    <service name="savePartyNameChange" engine="simple"
        location="component://party/script/org/ofbiz/party/party/PartyServices.xml" invoke="savePartyNameChange" auth="true">
        <description>Save Party Name Change</description>
        <attribute name="partyId" type="String" mode="IN" optional="true"><!-- if empty, will use userLogin.partyId to handle special case for updatePerson, etc --></attribute>
        <attribute name="groupName" type="String" mode="IN" optional="true"/>
        <attribute name="firstName" type="String" mode="IN" optional="true"/>
        <attribute name="middleName" type="String" mode="IN" optional="true"/>
        <attribute name="lastName" type="String" mode="IN" optional="true"/>
        <attribute name="personalTitle" type="String" mode="IN" optional="true"/>
        <attribute name="suffix" type="String" mode="IN" optional="true"/>
    </service>
    <service name="getPartyNameForDate" engine="simple"
        location="component://party/script/org/ofbiz/party/party/PartyServices.xml" invoke="getPartyNameForDate" auth="true">
        <description>Get Party Name For Date</description>
        <attribute name="partyId" type="String" mode="IN" optional="false"/>
        <attribute name="compareDate" type="Timestamp" mode="IN" optional="true"><!-- defaults to now --></attribute>
        <attribute name="lastNameFirst" type="String" mode="IN" optional="true"><!-- Y or N, defaults to N --></attribute>
        <attribute name="groupName" type="String" mode="OUT" optional="true"/>
        <attribute name="firstName" type="String" mode="OUT" optional="true"/>
        <attribute name="middleName" type="String" mode="OUT" optional="true"/>
        <attribute name="lastName" type="String" mode="OUT" optional="true"/>
        <attribute name="personalTitle" type="String" mode="OUT" optional="true"/>
        <attribute name="suffix" type="String" mode="OUT" optional="true"/>
        <attribute name="fullName" type="String" mode="OUT" optional="true"/>
        <attribute name="gender" type="String" mode="OUT" optional="true" />
    </service>

    <service name="createAffiliate" engine="java"
            location="org.ofbiz.party.party.PartyServices" invoke="createAffiliate" auth="false">
        <description>Create an Affiliate</description>
        <attribute name="partyId" type="String" mode="INOUT"/>
        <attribute name="affiliateName" type="String" mode="IN"/>
        <attribute name="affiliateDescription" type="String" mode="IN" optional="true"/>
        <attribute name="yearEstablished" type="String" mode="IN" optional="true"/>
        <attribute name="siteType" type="String" mode="IN" optional="true"/>
        <attribute name="sitePageViews" type="String" mode="IN" optional="true"/>
        <attribute name="siteVisitors" type="String" mode="IN" optional="true"/>
    </service>

    <service name="updateAffiliate" engine="java"
            location="org.ofbiz.party.party.PartyServices" invoke="updateAffiliate" auth="true">
        <description>Update an Affiliate</description>
        <permission-service service-name="partyBasePermissionCheck" main-action="UPDATE"/>
        <attribute name="partyId" type="String" mode="IN" optional="true"/>
        <attribute name="affiliateName" type="String" mode="IN"/>
        <attribute name="affiliateDescription" type="String" mode="IN" optional="true"/>
        <attribute name="yearEstablished" type="String" mode="IN" optional="true"/>
        <attribute name="siteType" type="String" mode="IN" optional="true"/>
        <attribute name="sitePageViews" type="String" mode="IN" optional="true"/>
        <attribute name="siteVisitors" type="String" mode="IN" optional="true"/>
    </service>

    <service name="createPartyNote" engine="java"
            location="org.ofbiz.party.party.PartyServices" invoke="createPartyNote" auth="true">
        <description>Create a note item and associate with a party. If a noteId is passed, creates an assoication to that note instead.</description>
        <attribute name="partyId" type="String" mode="IN" optional="false"/>
        <attribute name="noteName" type="String" mode="IN" optional="true"/>
        <attribute name="noteId" type="String" mode="INOUT" optional="true"/>
        <attribute name="note" type="String" mode="IN" optional="true"/>
    </service>

    <service name="createRoleType" engine="java"
            location="org.ofbiz.party.party.PartyServices" invoke="createRoleType" auth="true">
        <description>Create a new role type</description>
        <attribute name="roleTypeId" type="String" mode="IN"/>
        <attribute name="parentTypeId" type="String" mode="IN" optional="true"/>
        <attribute name="description" type="String" mode="IN"/>
        <attribute name="roleType" type="org.ofbiz.entity.GenericValue" mode="OUT"/>
    </service>

    <service name="setPartyProfileDefaults" engine="simple"
            location="component://party/script/org/ofbiz/party/party/PartyServices.xml" invoke="setPartyProfileDefaults" auth="true">
        <description>Sets the party (customer) profile defaults</description>
        <permission-service service-name="partyIdPermissionCheck" main-action="UPDATE"/>
        <auto-attributes mode="IN" entity-name="PartyProfileDefault" include="all" optional="true"/>
        <override name="productStoreId" optional="false"/>
    </service>
    
    <!-- SCIPIO: 2018-11-01: updatePartyProfileDefaultPostalAddressIds. NOTE: No perm check, do not call from event. -->
    <service name="updatePartyProfileDefaultPostalAddressIds" engine="simple" 
            location="component://party/script/org/ofbiz/party/party/PartyServices.xml" invoke="updatePartyProfileDefaultPostalAddressIds" auth="false">
        <description>Updates PartyProfileDefault defaultBillAddr and defaultShipAddr if ID changed (no perm check)</description>
        <!--<permission-service service-name="partyIdPermissionCheck" main-action="UPDATE"/>-->
        <attribute name="partyId" type="String" mode="IN" optional="true">
            <description>Note: If empty, uses current userLogin partyId</description>
        </attribute>
        <attribute name="oldContactMechId" type="String" mode="IN" optional="true"/>
        <attribute name="contactMechId" type="String" mode="IN" optional="true"/>
    </service>

    <!-- SCIPIO: 2018-11-01: updatePartyPostalAddressAndProfileIds. -->
    <service name="updatePartyPostalAddressAndProfileIds" engine="group" auth="true">
        <description>Updates party postal address and then updates PartyProfileDefault defaultBillAddr and defaultShipAddr if ID changed (no perm check)</description>
        <group>
            <!-- Currently called using ECA
            <invoke name="updatePartyPostalAddress" result-to-context="true"/>
            <invoke name="updatePartyProfileDefaultContactMechIds"/>-->
            <invoke name="updatePartyPostalAddress"/>
        </group>
    </service>

    <service name="createPartyAttribute" default-entity-name="PartyAttribute" engine="entity-auto" invoke="create" auth="true">
        <description>create a party attribute record</description>
        <permission-service service-name="partyBasePermissionCheck" main-action="CREATE"/>
        <auto-attributes include="pk" mode="IN" optional="false"/>
        <auto-attributes include="nonpk" mode="IN" optional="true"/>
    </service>
    <service name="updatePartyAttribute" default-entity-name="PartyAttribute" engine="entity-auto" invoke="update" auth="true">
        <description>updates a party attribute record</description>
        <permission-service service-name="partyBasePermissionCheck" main-action="UPDATE"/>
        <auto-attributes include="pk" mode="IN" optional="false"/>
        <auto-attributes include="nonpk" mode="IN" optional="true"/>
    </service>
    <service name="removePartyAttribute" default-entity-name="PartyAttribute" engine="entity-auto" invoke="delete" auth="true">
        <description>removes a party attribute record</description>
        <permission-service service-name="partyBasePermissionCheck" main-action="DELETE"/>
        <auto-attributes include="pk" mode="IN" optional="false"/>
    </service>

    <service name="linkPartyRecord" engine="java" auth="true" use-transaction="false"
                location="org.ofbiz.party.party.PartyServices" invoke="linkParty">
        <description>Merges customer accounts and disabled the duplicate</description>
        <attribute name="partyId" type="String" mode="INOUT" optional="false"/>
        <attribute name="partyIdTo" type="String" mode="IN" optional="false"/>
    </service>

    <service name="lookupParty" engine="simple"
        location="component://party/script/org/ofbiz/party/LookupServices.xml" invoke="lookupParty" auth="true">
        <description>Performs a lookup for parties</description>
        <attribute name="firstName" type="String" form-display="true" form-label="First name" mode="IN" optional="true"/>
        <attribute name="lastName" type="String" form-display="true" form-label="Last name" mode="IN" optional="true"/>
        <attribute name="lookupResult" type="List" mode="OUT" optional="false"/>
    </service>

    <service name="findPartiesById" engine="java"  auth="true"
            location="org.ofbiz.party.party.PartyServices" invoke="findPartyById">
        <description>Find the partyId corresponding to a reference and a reference type</description>
        <attribute type="String" mode="IN" name="idToFind" optional="false"/>
        <attribute type="String" mode="IN" name="partyIdentificationTypeId" optional="true"/>
        <attribute type="String" mode="IN" name="searchPartyFirst" optional="true"/>
        <attribute type="String" mode="IN" name="searchAllId" optional="true"/>
        <attribute type="org.ofbiz.entity.GenericValue" mode="OUT" name="party" optional="true"/>
        <attribute type="List" mode="OUT" name="partiesFound" optional="true"/>
    </service>

    <!-- Party Role services -->
    <service name="createPartyRole" default-entity-name="PartyRole" engine="entity-auto" invoke="create" auth="true">
        <description>Create a Party Role (add a Role to a Party). The logged in user must have PARTYMGR_CREATE or have
            permission to change the role of this partyId</description>
        <permission-service service-name="partyRolePermissionCheck" main-action="CREATE"/>
        <auto-attributes include="pk" mode="IN" optional="false"/>
    </service>
    <service name="deletePartyRole" default-entity-name="PartyRole" engine="entity-auto" invoke="delete" auth="true">
        <description>Delete a Party Role (remove a Role from a Party). The logged in user must have PARTYMGR_DELETE or have
            permission to change the role of this partyId</description>
        <permission-service service-name="partyRolePermissionCheck" main-action="DELETE"/>
        <auto-attributes include="pk" mode="IN" optional="false"/>
    </service>
    <service name="ensurePartyRole" engine="simple"
            location="component://party/script/org/ofbiz/party/party/PartySimpleMethods.xml" invoke="ensureNaPartyRole" auth="false">
        <description>Ensure that the party is in the specified role.</description>
        <attribute name="partyId" type="String" mode="IN" optional="false"/>
        <attribute name="roleTypeId" type="String" mode="IN" optional="false"/>
    </service>
    <service name="ensureNaPartyRole" engine="simple"
            location="component://party/script/org/ofbiz/party/party/PartySimpleMethods.xml" invoke="ensureNaPartyRole" auth="false">
        <description>Ensure that the party is in the _NA_ role.</description>
        <attribute name="partyId" type="String" mode="IN" optional="false"/>
    </service>
    <service name="ensurePartyRoleFrom" engine="simple"
            location="component://party/script/org/ofbiz/party/party/PartySimpleMethods.xml" invoke="ensureNaPartyRole" auth="true">
        <description>Ensure that the party indicate by partyIdFrom is in the roleTypeIdFrom specifc role. If roleTypeIdFrom isn't present use _NA_</description>
        <attribute name="partyIdFrom" type="String" mode="IN" optional="false"/>
        <attribute name="roleTypeIdFrom" type="String" mode="IN" optional="true"/>
    </service>
    <service name="ensurePartyRoleTo" engine="simple"
            location="component://party/script/org/ofbiz/party/party/PartySimpleMethods.xml" invoke="ensureNaPartyRole" auth="true">
        <description>Ensure that the party indicate by partyIdTo is in the roleTypeIdTo specific role. If roleTypeIdTo isn't present use _NA_</description>
        <attribute name="partyIdTo" type="String" mode="IN" optional="false"/>
        <attribute name="roleTypeIdTo" type="String" mode="IN" optional="true"/>
    </service>

    <!-- Party Relationship services -->
    <service name="createPartyRelationship" default-entity-name="PartyRelationship" engine="simple"
        location="component://party/script/org/ofbiz/party/party/PartyServices.xml" invoke="createPartyRelationship" auth="true">
        <description>
            Create a Relationship between two Parties;
            if partyIdFrom is not specified the partyId of the current userLogin will be used;
            if roleTypeIds are not specified they will default to "_NA_".
            If a partyIdFrom is passed in, it will be used if the userLogin has PARTYMGR_REL_CREATE permission.
        </description>
        <permission-service service-name="partyRelationshipPermissionCheck" main-action="CREATE"/>
        <auto-attributes include="pk" mode="IN" optional="true"/>
        <auto-attributes include="nonpk" mode="IN" optional="true"/>
        <override name="partyIdTo" optional="false"/>
    </service>
    <service name="updatePartyRelationship" default-entity-name="PartyRelationship" engine="simple"
        location="component://party/script/org/ofbiz/party/party/PartyServices.xml" invoke="updatePartyRelationship" auth="true">
        <description>
            Update a Relationship between two Parties;
            if partyIdFrom is not specified the partyId of the current userLogin will be used;
            if roleTypeIds are not specified they will default to "_NA_".
            If a partyIdFrom is passed in, it will be used if the userLogin has PARTYMGR_REL_UPDATE permission.
        </description>
        <permission-service service-name="partyRelationshipPermissionCheck" main-action="UPDATE"/>
        <auto-attributes include="pk" mode="IN" optional="false"/>
        <auto-attributes include="nonpk" mode="IN" optional="true"/>
        <override name="partyIdFrom" optional="true"/>
        <override name="roleTypeIdFrom" optional="true"/>
        <override name="roleTypeIdTo" optional="true"/>
    </service>
    <service name="deletePartyRelationship" default-entity-name="PartyRelationship" engine="simple"
        location="component://party/script/org/ofbiz/party/party/PartyServices.xml" invoke="deletePartyRelationship" auth="true">
        <description>
            Delete a Relationship between two Parties;
            if partyIdFrom is not specified the partyId of the current userLogin will be used;
            if roleTypeIds are not specified they will default to "_NA_".
        </description>
        <permission-service service-name="partyRelationshipPermissionCheck" main-action="DELETE"/>
        <auto-attributes include="pk" mode="IN" optional="false"/>
        <override name="partyIdFrom" optional="true"/>
        <override name="roleTypeIdFrom" optional="true"/>
        <override name="roleTypeIdTo" optional="true"/>
    </service>

    <service name="createPartyRelationshipAndRole" engine="group" auth="true">
        <description>Create party's roles and party's relationship</description>
        <group>
            <invoke name="ensurePartyRoleFrom"/>
            <invoke name="ensurePartyRoleTo"/>
            <invoke name="createPartyRelationship"/>
        </group>
    </service>

    <service name="createPartyRelationshipType" engine="java" default-entity-name="PartyRelationshipType"
            location="org.ofbiz.party.party.PartyRelationshipServices" invoke="createPartyRelationshipType" auth="true">
        <description>Create a new Party Relationship type</description>
        <auto-attributes include="pk" mode="IN" optional="false"/>
        <auto-attributes include="nonpk" mode="IN" optional="true"/>
        <override name="partyRelationshipName" optional="false"/>
    </service>

    <service name="createUpdatePartyRelationshipAndRoles" engine="java" default-entity-name="PartyRelationship"
        location="org.ofbiz.party.party.PartyRelationshipServices" invoke="createUpdatePartyRelationshipAndRoles" auth="true">
        <description>
            Create or update both parties roles and parties relationship, partyRelationshipTypeId being mandatory.
            The relationship is considered from one side or another (partyId is checked internally against partyIdFrom)
            If a type of parties relationship exists PartyIdTo or PartyIdFrom are updated.
            The history is maintained, allowing to track changes.
        </description>
        <auto-attributes include="pk" mode="IN" optional="false"/>
        <auto-attributes include="nonpk" mode="IN" optional="true"/>
        <attribute name="partyId" type="String" mode="IN" optional="false"/>
        <override name="fromDate" optional="true"/>
    </service>

    <service name="createPartyRelationshipContactAccount" engine="simple"
        location="component://party/script/org/ofbiz/party/party/PartyServices.xml" invoke="createPartyRelationshipContactAccount" auth="true">
        <description>create a company/contact relationship and add the related roles</description>
        <attribute name="accountPartyId" type="String" mode="IN"/>
        <attribute name="contactPartyId" type="String" mode="IN"/>
        <attribute name="comments" type="String" mode="IN" optional="true" allow-html="any"/>
    </service>

    <!-- ContactMech services -->
    <service name="createContactMech" engine="simple"
            location="component://party/script/org/ofbiz/party/contact/ContactMechServices.xml" invoke="createContactMech" auth="true">
        <description>Create a ContactMech</description>
        <auto-attributes entity-name="ContactMech" include="nonpk" mode="IN" optional="false"/>
        <auto-attributes entity-name="ContactMech" include="pk" mode="INOUT" optional="true"/>
        <override name="infoString" optional="true"/>
    </service>
    <service name="createPartyContactMech" engine="simple"
            location="component://party/script/org/ofbiz/party/contact/PartyContactMechServices.xml" invoke="createPartyContactMech" auth="true">
        <description>Create a PartyContactMech</description>
        <permission-service service-name="partyContactMechPermissionCheck" main-action="CREATE"/>
        <auto-attributes entity-name="ContactMech" include="nonpk" mode="IN" optional="true"/>
        <auto-attributes entity-name="PartyContactMech" include="all" mode="IN" optional="true"/>
        <attribute name="contactMechPurposeTypeId" type="String" mode="IN" optional="true"/>
        <attribute name="contactMechId" type="String" mode="INOUT" optional="true"/>
        <attribute name="contactMechTypeId" type="String" mode="IN" optional="false">
            <type-validate>
                <fail-property resource="PartyErrorUiLabels" property="PartyRequiredFieldMissingContactMechTypeId"/>
            </type-validate>
        </attribute>
    </service>
    <service name="updateContactMech" engine="simple"
            location="component://party/script/org/ofbiz/party/contact/ContactMechServices.xml" invoke="updateContactMech" auth="true">
        <description>Update a ContactMech</description>
        <attribute name="contactMechId" type="String" mode="INOUT" optional="false"/>
        <attribute name="contactMechTypeId" type="String" mode="IN" optional="false"/>
        <attribute name="infoString" type="String" mode="IN" optional="true"/>
    </service>
    <service name="updatePartyContactMech" engine="simple"
            location="component://party/script/org/ofbiz/party/contact/PartyContactMechServices.xml" invoke="updatePartyContactMech" auth="true">
        <description>Update a PartyContactMech</description>
        <permission-service service-name="partyContactMechPermissionCheck" main-action="UPDATE"/>
        <auto-attributes entity-name="PartyContactMech" include="all" mode="IN" optional="true"/>
        <attribute name="contactMechId" type="String" mode="INOUT" optional="false"/>
        <attribute name="contactMechTypeId" type="String" mode="IN" optional="false"/>
        <attribute name="infoString" type="String" mode="IN" optional="true"/>
        <attribute name="newContactMechId" type="String" mode="IN" optional="true"/>
    </service>
    <!-- SCIPIO: 2018-11-02: same as updatePartyContactMech but requires a pre-looked-up partyContactMech (NOTE: caller mostly responsible for permissions!) -->
    <service name="updatePartyContactMechGiven" engine="simple"
            location="component://party/script/org/ofbiz/party/contact/PartyContactMechServices.xml" invoke="updatePartyContactMech" auth="true">
        <description>Update a PartyContactMech, where the record has already been looked up</description>
        <permission-service service-name="partyContactMechPermissionCheck" main-action="UPDATE"/>
        <implements service="updatePartyContactMech"/>
        <attribute name="partyContactMech" type="GenericValue" mode="IN" optional="false"/>
    </service>
    <!-- SCIPIO: 2018-10-30: deletePartyContactMech now also expires PartyContactMechPurpose records -->
    <service name="deletePartyContactMech" engine="simple"
            location="component://party/script/org/ofbiz/party/contact/PartyContactMechServices.xml" invoke="deletePartyContactMechAndPurposes" auth="true">
        <description>Delete (expire) a PartyContactMech (SCIPIO: 2018-10-30: Now also expires PartyContactMechPurpose records)</description>
        <permission-service service-name="partyContactMechPermissionCheck" main-action="DELETE"/>
        <attribute name="partyId" type="String" mode="IN" optional="true"/>
        <attribute name="contactMechId" type="String" mode="IN" optional="false"/>
    </service>
    <!-- SCIPIO: 2018-10-30: new deletePartyContactMechOnly, now that deletePartyContactMech expires the purposes -->
    <service name="deletePartyContactMechOnly" engine="simple"
            location="component://party/script/org/ofbiz/party/contact/PartyContactMechServices.xml" invoke="deletePartyContactMechOnly" auth="true">
        <description>Delete (expire) a PartyContactMech only (SCIPIO: Not its purposes)</description>
        <permission-service service-name="partyContactMechPermissionCheck" main-action="DELETE"/>
        <attribute name="partyId" type="String" mode="IN" optional="true"/>
        <attribute name="contactMechId" type="String" mode="IN" optional="false"/>
    </service>
    <service name="createPostalAddress" engine="simple"
            location="component://party/script/org/ofbiz/party/contact/ContactMechServices.xml" invoke="createPostalAddress" auth="true">
        <description>Create a Postal Address</description>
        <auto-attributes entity-name="PostalAddress" include="all" mode="IN" optional="true"/>
        <attribute name="contactMechId" type="String" mode="OUT" optional="false"/>
        <override name="address1" optional="false"/>
        <override name="city" optional="false"/>
        <override name="postalCode" optional="false"/>
    </service>
    <!-- Party ContachMech reverse find -->
    <service name="findPartyFromEmailAddress" engine="simple"
        location="component://party/script/org/ofbiz/party/contact/PartyContactMechServices.xml" invoke="findPartyFromEmailAddress" auth="true">
        <description>Find the partyId/contactMechId for a specific email address, if not found do not return a value</description>
        <attribute name="address" type="String" mode="IN" optional="false"/>
        <attribute name="caseInsensitive" type="String" mode="IN" optional="true"/>
        <attribute name="personal" type="String" mode="IN" optional="true"/><!-- field not used -->
        <attribute name="fromDate" type="Timestamp" mode="IN" optional="true"/>
        <attribute name="partyId" type="String" mode="OUT" optional="true"/>
        <attribute name="contactMechId" type="String" mode="OUT" optional="true"/>
    </service>
    <service name="findPartyFromTelephone" engine="simple"
        location="component://party/script/org/ofbiz/party/contact/PartyContactMechServices.xml" invoke="findPartyFromTelephone" auth="true">
        <description>Find the partyId/contactMechId for a specific telephone number, if not found do not return a value</description>
        <attribute name="telno" type="String" mode="IN" optional="false"/>
        <attribute name="partyId" type="String" mode="OUT" optional="true"/>
        <attribute name="contactMechId" type="String" mode="OUT" optional="true"/>
    </service>
    <service name="findPartyFromTelephoneComplete" engine="simple"
        location="component://party/script/org/ofbiz/party/contact/PartyContactMechServices.xml" invoke="findPartyFromTelephoneComplete" auth="true">
        <description>
            Find the partyId/contactMechId for a specific telephone number, if not found do not return a value.
            Same than above but keep the number complete internally.
        </description>
        <attribute name="telno" type="String" mode="IN" optional="false"/>
        <attribute name="partyId" type="String" mode="OUT" optional="true"/>
        <attribute name="contactMechId" type="String" mode="OUT" optional="true"/>
    </service>
    <service name="createPartyPostalAddress" engine="simple"
            location="component://party/script/org/ofbiz/party/contact/PartyContactMechServices.xml" invoke="createPartyPostalAddress" auth="true">
        <description>Create a Postal Address</description>
        <permission-service service-name="partyContactMechPermissionCheck" main-action="CREATE"/>
        <auto-attributes entity-name="PartyContactMech" include="all" mode="IN" optional="true"/>
        <auto-attributes entity-name="PostalAddress" include="nonpk" mode="IN" optional="true"/>
        <attribute name="paymentMethodId" type="String" mode="IN" optional="true"/>
        <attribute name="contactMechPurposeTypeId" type="String" mode="IN" optional="true"/>
        <attribute name="contactMechId" type="String" mode="OUT" optional="false"/>
        <override name="address1" optional="false"/>
        <override name="city" optional="false"/>
        <override name="postalCode" optional="false"/>
    </service>
    <service name="updatePostalAddress" engine="simple"
            location="component://party/script/org/ofbiz/party/contact/ContactMechServices.xml" invoke="updatePostalAddress" auth="true">
        <description>Update a Postal Address</description>
        <auto-attributes entity-name="PostalAddress" include="nonpk" mode="IN" optional="true"/>
        <attribute name="contactMechId" type="String" mode="INOUT" optional="false"/> <!-- the out paramater is the id of the new address -->
        <attribute name="directions" type="String" mode="IN" optional="true"/> <!-- ?? -->
        <attribute name="oldContactMechId" type="String" mode="OUT" optional="false"/> <!-- this is the id of the old address -->
        <attribute name="partyId" type="String" mode="IN" optional="true"/>
        <override name="address1" optional="false"/>
        <override name="city" optional="false"/>
        <override name="postalCode" optional="false"/>
    </service>
    <service name="updatePartyPostalAddress" engine="simple"
            location="component://party/script/org/ofbiz/party/contact/PartyContactMechServices.xml" invoke="updatePartyPostalAddress" auth="true">
        <description>Update a Postal Address</description>
        <permission-service service-name="partyContactMechPermissionCheck" main-action="UPDATE"/>
        <auto-attributes entity-name="PartyContactMech" include="all" mode="IN" optional="true"/>
        <auto-attributes entity-name="PostalAddress" include="nonpk" mode="IN" optional="true"/>
        <attribute name="contactMechId" type="String" mode="INOUT" optional="false"/>
        <attribute name="oldContactMechId" type="String" mode="OUT" optional="false"/><!-- SCIPIO: 2018-11-01: needed for ecas -->
        <attribute name="directions" type="String" mode="IN" optional="true"/> <!-- ?? -->
        <!-- SCIPIO: NOTE: 2018-11-01: updatePartyProfileIds currently implemented with seca invoking updatePartyProfileDefaultPostalAddressIds -->
        <attribute name="updatePartyProfileIds" type="Boolean" mode="IN" optional="true" default-value="true">
            <description>SCIPIO: If set to false, will prevent trying to update PartyProfileDefault.
                Currently (2018-11-01), this is true by default</description><!-- SCIPIO: Added 2018-11-01  -->
        </attribute>
        <override name="address1" optional="false"/>
        <override name="city" optional="false"/>
        <override name="postalCode" optional="false"/>
    </service>
    <service name="createTelecomNumber" engine="simple"
            location="component://party/script/org/ofbiz/party/contact/ContactMechServices.xml" invoke="createTelecomNumber" auth="true">
        <description>Create a Telecommunications Number</description>
        <auto-attributes entity-name="TelecomNumber" include="all" mode="IN" optional="true"/>
        <attribute name="contactMechId" type="String" mode="OUT" optional="false"/>
    </service>
    <service name="createPartyTelecomNumber" engine="simple"
            location="component://party/script/org/ofbiz/party/contact/PartyContactMechServices.xml" invoke="createPartyTelecomNumber" auth="true">
        <description>Create a Telecommunications Number</description>
        <permission-service service-name="partyContactMechPermissionCheck" main-action="CREATE"/>
        <auto-attributes entity-name="PartyContactMech" include="all" mode="IN" optional="true"/>
        <auto-attributes entity-name="TelecomNumber" include="nonpk" mode="IN" optional="true"/>
        <attribute name="contactMechPurposeTypeId" type="String" mode="IN" optional="true"/>
        <attribute name="contactMechId" type="String" mode="OUT" optional="false"/>
    </service>
    <service name="updateTelecomNumber" engine="simple"
            location="component://party/script/org/ofbiz/party/contact/ContactMechServices.xml" invoke="updateTelecomNumber" auth="true">
        <description>Update a Telecommunications Number</description>
        <auto-attributes entity-name="TelecomNumber" include="nonpk" mode="IN" optional="true"/>
        <attribute name="contactMechId" type="String" mode="INOUT" optional="false"/>
        <attribute name="forceNewRecord" type="Boolean" mode="IN" optional="true" default-value="false">
            <description>SCIPIO: If true, bypasses change detection and creates a new record even if no changes (added 2018-11-02)</description>
        </attribute>
        <attribute name="oldContactMechId" type="String" mode="OUT" optional="false"/>
    </service>
    <service name="updatePartyTelecomNumber" engine="simple"
            location="component://party/script/org/ofbiz/party/contact/PartyContactMechServices.xml" invoke="updatePartyTelecomNumber" auth="true">
        <description>Update a Telecommunications Number</description>
        <permission-service service-name="partyContactMechPermissionCheck" main-action="UPDATE"/>
        <auto-attributes entity-name="PartyContactMech" include="all" mode="IN" optional="true"/>
        <auto-attributes entity-name="TelecomNumber" include="nonpk" mode="IN" optional="true"/>
        <attribute name="contactMechId" type="String" mode="INOUT" optional="false"/>
    </service>
    <service name="createEmailAddress" engine="simple"
            location="component://party/script/org/ofbiz/party/contact/ContactMechServices.xml" invoke="createEmailAddress" auth="true">
        <description>Create an Email Address</description>
        <auto-attributes entity-name="ContactMech" include="nonpk" mode="IN" optional="true"/>
        <auto-attributes entity-name="ContactMech" include="pk" mode="OUT" optional="false"/>
        <attribute name="emailAddress" type="String" mode="IN" optional="false"/>
        <override name="infoString" optional="true"/>
    </service>
    <service name="createPartyEmailAddress" engine="simple"
            location="component://party/script/org/ofbiz/party/contact/PartyContactMechServices.xml" invoke="createPartyEmailAddress" auth="true">
        <description>Create an Email Address</description>
        <permission-service service-name="partyContactMechPermissionCheck" main-action="CREATE"/>
        <auto-attributes entity-name="ContactMech" include="nonpk" mode="IN" optional="true"/>
        <auto-attributes entity-name="PartyContactMech" include="all" mode="IN" optional="true"/>
        <attribute name="contactMechPurposeTypeId" type="String" mode="IN" optional="true"/>
        <attribute name="contactMechId" type="String" mode="INOUT" optional="true"/>
        <attribute name="emailAddress" type="String" mode="IN" optional="false"/>
    </service>
    <service name="updateEmailAddress" engine="simple"
            location="component://party/script/org/ofbiz/party/contact/ContactMechServices.xml" invoke="updateEmailAddress" auth="true">
        <description>Update an Email Address</description>
        <attribute name="contactMechId" type="String" mode="INOUT" optional="false"/>
        <attribute name="emailAddress" type="String" mode="IN" optional="false"/>
    </service>
    <service name="updatePartyEmailAddress" engine="simple"
            location="component://party/script/org/ofbiz/party/contact/PartyContactMechServices.xml" invoke="updatePartyEmailAddress" auth="true">
        <description>Update an Email Address</description>
        <permission-service service-name="partyContactMechPermissionCheck" main-action="UPDATE"/>
        <auto-attributes entity-name="PartyContactMech" include="all" mode="IN" optional="true"/>
        <attribute name="contactMechId" type="String" mode="INOUT" optional="false"/> <!-- the out paramater is the id of the new address -->
        <attribute name="emailAddress" type="String" mode="IN" optional="false"/>
        <attribute name="oldContactMechId" type="String" mode="OUT" optional="false"/> <!-- this is the id of the old address -->
    </service>
    <service name="copyPartyContactMechs" engine="java"
        location="org.ofbiz.party.contact.ContactMechServices" invoke="copyPartyContactMechs" auth="true">
        <description>Copies all contact mechs from the partyIdFrom to the partyIdTo. Does not delete or overwrite any contact mechs.</description>
        <attribute name="partyIdFrom" type="String" mode="IN" optional="false"/>
        <attribute name="partyIdTo" type="String" mode="IN" optional="false"/>
    </service>
    <service name="createPartyFtpAddress" engine="groovy"
             location="component://party/script/org/ofbiz/party/contact/ContactMechServices.groovy" invoke="createPartyFtpAddress" auth="true">
        <description>Create an Ftp Address associated to a party</description>
        <permission-service service-name="partyContactMechPermissionCheck" main-action="CREATE"/>
        <auto-attributes entity-name="ContactMech" include="nonpk" mode="IN" optional="true"/>
        <auto-attributes entity-name="PartyContactMech" mode="IN" optional="true"/>
        <auto-attributes entity-name="FtpAddress" mode="IN" optional="true"/>
        <attribute name="contactMechPurposeTypeId" type="String" mode="IN" optional="true"/>
        <attribute name="contactMechId" type="String" mode="INOUT" optional="true"/>
    </service>
    <service name="updatePartyFtpAddress" engine="groovy"
             location="component://party/script/org/ofbiz/party/contact/ContactMechServices.groovy" invoke="updatePartyFtpAddress" auth="true">
        <description>Update an Ftp Address associated to a party</description>
        <permission-service service-name="partyContactMechPermissionCheck" main-action="UPDATE"/>
        <auto-attributes entity-name="PartyContactMech" mode="IN" optional="true"/>
        <auto-attributes entity-name="FtpAddress" mode="IN" optional="true"/>
        <attribute name="contactMechId" type="String" mode="INOUT"/>
    </service>
    <service name="createFtpAddress" default-entity-name="FtpAddress" engine="groovy" invoke="createFtpAddress"
             location="component://party/script/org/ofbiz/party/contact/ContactMechServices.groovy">
        <description>create FtpAddress</description>
        <permission-service service-name="partyBasePermissionCheck" main-action="CREATE"/>
        <auto-attributes mode="OUT" include="pk"/>
        <auto-attributes mode="IN" include="nonpk" optional="true"/>
    </service>
    <service name="updateFtpAddressWithHistory" default-entity-name="FtpAddress" engine="groovy" invoke="updateFtpAddressWithHistory"
        location="component://party/script/org/ofbiz/party/contact/ContactMechServices.groovy">
        <description>update FtpAddress</description>
        <permission-service service-name="partyBasePermissionCheck" main-action="UPDATE"/>
        <auto-attributes mode="IN" include="pk"/>
        <auto-attributes mode="IN" include="nonpk" optional="true"/>
        <attribute name="contactMechId" type="String" mode="INOUT"/> <!-- the out paramater is the id of the new address -->
        <attribute name="oldContactMechId" type="String" mode="OUT"/> <!-- this is the id of the old address -->
    </service>
    <!-- contact mech attribute services -->
    <service name="createContactMechAttribute" engine="simple" default-entity-name="ContactMechAttribute"
            location="component://party/script/org/ofbiz/party/contact/ContactMechServices.xml" invoke="createContactMechAttribute" auth="true">
        <description>create a contact mech attribute record</description>
        <permission-service service-name="partyBasePermissionCheck" main-action="CREATE"/>
        <auto-attributes include="pk" mode="IN" optional="false"/>
        <auto-attributes include="nonpk" mode="IN" optional="true"/>
    </service>
    <service name="updateContactMechAttribute" engine="simple" default-entity-name="ContactMechAttribute"
            location="component://party/script/org/ofbiz/party/contact/ContactMechServices.xml" invoke="updateContactMechAttribute" auth="true">
        <description>updates a contact mech attribute record</description>
        <permission-service service-name="partyBasePermissionCheck" main-action="UPDATE"/>
        <auto-attributes include="pk" mode="IN" optional="false"/>
        <auto-attributes include="nonpk" mode="IN" optional="true"/>
    </service>
    <service name="removeContactMechAttribute" engine="simple" default-entity-name="ContactMechAttribute"
            location="component://party/script/org/ofbiz/party/contact/ContactMechServices.xml" invoke="removeContactMechAttribute" auth="true">
        <description>removes a contact mech attribute record</description>
        <permission-service service-name="partyBasePermissionCheck" main-action="DELETE"/>
        <auto-attributes include="pk" mode="IN" optional="false"/>
    </service>

    <!-- PartyContactMechPurpose services -->
    <service name="createPartyContactMechPurpose" engine="java"
            location="org.ofbiz.party.contact.ContactMechServices" invoke="createPartyContactMechPurpose" auth="true">
        <description>Create a Party ContactMech Purpose</description>
        <attribute name="partyId" type="String" mode="IN" optional="true"/>
        <attribute name="contactMechId" type="String" mode="IN" optional="false"/>
        <attribute name="contactMechPurposeTypeId" type="String" mode="IN" optional="false"/>
        <attribute name="fromDate" type="Timestamp" mode="INOUT" optional="true"/>
    </service>
    <service name="deletePartyContactMechPurpose" engine="java"
            location="org.ofbiz.party.contact.ContactMechServices" invoke="deletePartyContactMechPurpose" auth="true">
        <description>Delete a Party ContactMech Purpose (Note: actually expires the purpose using thruDate)</description><!-- SCIPIO: added note -->
        <attribute name="partyId" type="String" mode="IN" optional="true"/>
        <attribute name="contactMechId" type="String" mode="IN" optional="false"/>
        <attribute name="contactMechPurposeTypeId" type="String" mode="IN" optional="false"/>
        <attribute name="fromDate" type="Timestamp" mode="IN" optional="false"/>
    </service>
    <service name="deletePartyContactMechPurposeIfExists" engine="java"
            location="org.ofbiz.party.contact.ContactMechServices" invoke="deletePartyContactMechPurposeIfExists" auth="true">
        <description>Delete a Party ContactMech Purpose (Note: actually expires the purpose using thruDate)</description><!-- SCIPIO: added note -->
        <attribute name="partyId" type="String" mode="IN" optional="true"/>
        <attribute name="contactMechId" type="String" mode="IN" optional="false"/>
        <attribute name="contactMechPurposeTypeId" type="String" mode="IN" optional="false"/>
    </service>
    <service name="expirePartyContactMechPurpose" default-entity-name="PartyContactMechPurpose" engine="entity-auto" invoke="expire">
        <description>Expires a Party Contact Mech Purpose (Note: same as deletePartyContactMechPurpose except requires partyId)</description><!-- SCIPIO: added note -->
        <permission-service service-name="partyContactMechPermissionCheck" main-action="DELETE"/>
        <auto-attributes mode="IN" include="pk" optional="false"/>
    </service>
    <!-- SCIPIO: 2018-10-31: for ensurePartyContactMechPurposes new service -->
    <service name="ensureContactMechPurposesInterface" engine="interface">
        <description>Interface for services similar to ensurePartyContactMechPurposes (SCIPIO)</description>
        <attribute name="contactMechId" type="String" mode="IN" optional="false"/>
        <attribute name="contactMechPurposeTypeIds" type="List" mode="IN" optional="false"/>
        <attribute name="exact" type="Boolean" mode="IN" optional="true" default-value="false">
            <description>If true, other purposes not in the list are removed.</description>
        </attribute>
        <attribute name="conflictMode" type="String" mode="IN" optional="true" default-value="error">
            <description>What to do when a role is already in use by another active contactMechId:
                * error: return an error (safe mode)
                * skip: leave old one, don't create new one
                * steal: steal the purpose from the other contact mech (add to ours, remove from the old)
                * dup: create a duplicate purpose for the new one, leave old intact (NOT RECOMMENDED)
                * dup-warn: same as duplicate but also leaves a warning in the log (NOT RECOMMENDED)</description>
        </attribute>
    </service>
    <!-- SCIPIO: 2018-10-31: ensurePartyContactMechPurposes new service -->
    <service name="ensurePartyContactMechPurposes" engine="java"
            location="org.ofbiz.party.contact.ContactMechServices" invoke="ensurePartyContactMechPurposes" auth="true">
        <description>Ensures Party ContactMech has the requested purposes (SCIPIO)</description>
        <permission-service service-name="partyContactMechPermissionCheck" main-action="UPDATE"/>
        <implements service="ensureContactMechPurposesInterface"/>
        <attribute name="partyId" type="String" mode="IN" optional="false"/>
    </service>

    <!-- ContactMechList services -->
    <service name="createContactMechLink" default-entity-name="ContactMechLink" engine="simple"
            location="component://party/script/org/ofbiz/party/contact/ContactMechServices.xml" invoke="createContactMechLink" auth="true">
        <auto-attributes include="pk" mode="IN" optional="false"/>
    </service>
    <service name="deleteContactMechLink" default-entity-name="ContactMechLink" engine="simple"
            location="component://party/script/org/ofbiz/party/contact/ContactMechServices.xml" invoke="deleteContactMechLink" auth="true">
        <auto-attributes include="pk" mode="IN" optional="false"/>
    </service>

    <!-- PostalAddressBoundary -->
    <service name="createPostalAddressBoundary" default-entity-name="PostalAddressBoundary" engine="entity-auto" invoke="create">
        <description>Create a Postal Address Boundary</description>
        <permission-service service-name="partyBasePermissionCheck" main-action="CREATE"/>
        <auto-attributes mode="IN" include="pk" optional="false"/>
    </service>
    <service name="deletePostalAddressBoundary" default-entity-name="PostalAddressBoundary" engine="entity-auto" invoke="delete">
        <description>Delete a Postal Address Boundary</description>
        <permission-service service-name="partyBasePermissionCheck" main-action="DELETE"/>
        <auto-attributes mode="IN" include="pk" optional="false"/>
    </service>

    <!-- PartyClassification -->
    <service name="createPartyClassification" default-entity-name="PartyClassification" engine="entity-auto" invoke="create">
        <description>create PartyClassification</description>
        <permission-service service-name="partyBasePermissionCheck" main-action="CREATE"/>
        <auto-attributes mode="IN" include="pk" optional="false"/>
        <auto-attributes mode="IN" include="nonpk" optional="true"/>
        <override name="fromDate" optional="true"/>
    </service>
    <service name="updatePartyClassification" default-entity-name="PartyClassification" engine="entity-auto" invoke="update">
        <description>update PartyClassification</description>
        <permission-service service-name="partyBasePermissionCheck" main-action="UPDATE"/>
        <auto-attributes mode="IN" include="pk" optional="false"/>
        <auto-attributes mode="IN" include="nonpk" optional="true"/>
    </service>
    <service name="deletePartyClassification" default-entity-name="PartyClassification" engine="entity-auto" invoke="delete">
        <description>delete PartyClassification</description>
        <permission-service service-name="partyBasePermissionCheck" main-action="DELETE"/>
        <auto-attributes mode="IN" include="pk" optional="false"/>
    </service>
    <service name="createPartyClassificationGroup" default-entity-name="PartyClassificationGroup" engine="entity-auto" invoke="create">
        <description>create PartyClassificationGroup</description>
        <permission-service service-name="partyBasePermissionCheck" main-action="CREATE"/>
        <auto-attributes mode="OUT" include="pk" optional="false"/>
        <auto-attributes mode="IN" include="nonpk" optional="true"/>
    </service>
    <service name="updatePartyClassificationGroup" default-entity-name="PartyClassificationGroup" engine="entity-auto" invoke="update">
        <description>update PartyClassificationGroup</description>
        <permission-service service-name="partyBasePermissionCheck" main-action="UPDATE"/>
        <auto-attributes mode="IN" include="pk" optional="false"/>
        <auto-attributes mode="IN" include="nonpk" optional="true"/>
    </service>
    <service name="deletePartyClassificationGroup" default-entity-name="PartyClassificationGroup" engine="entity-auto" invoke="delete">
        <description>delete PartyClassificationGroup</description>
        <permission-service service-name="partyBasePermissionCheck" main-action="DELETE"/>
        <auto-attributes mode="IN" include="pk" optional="false"/>
    </service>

    <!-- PartyIdentification -->
    <service name="createPartyIdentification" engine="entity-auto" default-entity-name="PartyIdentification" invoke="create">
        <description>create PartyIdentification entity</description>
        <permission-service service-name="partyBasePermissionCheck" main-action="CREATE"/>
        <auto-attributes mode="IN" include="pk"/>
        <auto-attributes mode="IN" optional="true" include="nonpk"/>
    </service>
    <service name="updatePartyIdentification" engine="entity-auto" default-entity-name="PartyIdentification" invoke="update">
        <description>update PartyIdentification entity</description>
        <permission-service service-name="partyBasePermissionCheck" main-action="UPDATE"/>
        <auto-attributes mode="IN" include="pk"/>
        <auto-attributes mode="IN" optional="true" include="nonpk"/>
    </service>
    <service name="deletePartyIdentification" engine="entity-auto" default-entity-name="PartyIdentification" invoke="delete">
        <description>delete PartyClassificationGroup</description>
        <permission-service service-name="partyBasePermissionCheck" main-action="DELETE"/>
        <auto-attributes mode="IN" include="pk"/>
    </service>
    <service name="createPartyIdentifications" engine="simple" default-entity-name="PartyIdentification"
            location="component://party/script/org/ofbiz/party/party/PartyServices.xml" invoke="createPartyIdentifications">
        <description>create many identifications with format in map identifications : [partyType : TYPE, TYPE : value]</description>
        <permission-service service-name="partyBasePermissionCheck" main-action="CREATE"/>
        <attribute name="partyId" mode="IN" type="String"/>
        <attribute name="identifications" mode="IN" type="Map" />
    </service>

    <!-- Vendor -->
    <service name="createVendor" default-entity-name="Vendor" engine="entity-auto" invoke="create" auth="true">
        <description>Create Vendor Information</description>
        <permission-service service-name="partyBasePermissionCheck" main-action="CREATE"/>
        <auto-attributes entity-name="Vendor" include="pk" mode="IN" optional="false"/>
        <auto-attributes entity-name="Vendor" include="nonpk" mode="IN" optional="true"/>
    </service>
    <service name="updateVendor" default-entity-name="Vendor" engine="entity-auto" invoke="update" auth="true">
        <description>Update Vendor Information</description>
        <permission-service service-name="partyBasePermissionCheck" main-action="UPDATE"/>
        <auto-attributes entity-name="Vendor" include="pk" mode="IN" optional="false"/>
        <auto-attributes entity-name="Vendor" include="nonpk" mode="IN" optional="true"/>
    </service>
    <service name="deleteVendor" default-entity-name="Vendor" engine="entity-auto" invoke="delete" auth="true">
        <description>Remove Vendor Information</description>
        <permission-service service-name="partyBasePermissionCheck" main-action="DELETE"/>
        <auto-attributes entity-name="Vendor" include="pk" mode="IN" optional="false"/>
    </service>

    <!-- PartyDataSource services -->
    <service name="createPartyDataSource" engine="java"
            location="org.ofbiz.party.party.PartyServices" invoke="createPartyDataSource" auth="true">
        <description>Creates a relation between a Party and a DataSource using PartyDataSource. The userLogin must have PARTYMGR_SRC_CREATE permission.</description>
        <permission-service service-name="partyDatasourcePermissionCheck" main-action="CREATE"/>
        <attribute name="partyId" type="String" mode="IN" optional="false"/>
        <attribute name="dataSourceId" type="String" mode="IN" optional="false"/>
        <attribute name="fromDate" type="Timestamp" mode="IN" optional="true"/>
    </service>

    <!-- Communication Event Services -->
    <service name="setCommunicationEventStatus" engine="simple" default-entity-name="CommunicationEvent"
            location="component://party/script/org/ofbiz/party/communication/CommunicationEventServices.xml" invoke="setCommunicationEventStatus" auth="true">
        <description>Set the Communication event Status</description>
        <permission-service service-name="partyCommunicationEventPermissionCheck" main-action="UPDATE"/>
        <auto-attributes mode="IN" include="pk" optional="false"/>
        <attribute name="statusId" type="String" mode="IN" optional="false"/>
        <attribute name="oldStatusId" type="String" mode="OUT" optional="true"/>
        <attribute name="setRoleStatusToComplete" mode="IN" type="String" default-value="N"/>
        <attribute name="partyIdFrom" type="String" mode="IN" optional="true"/>
    </service>
    <service name="setCommunicationEventRoleStatus" engine="simple" default-entity-name="CommunicationEventRole"
            location="component://party/script/org/ofbiz/party/communication/CommunicationEventServices.xml" invoke="setCommunicationEventRoleStatus" auth="true">
        <description>Set the Communication event  Status for a specific role</description>
        <permission-service service-name="partyCommunicationEventPermissionCheck" main-action="UPDATE"/>
        <auto-attributes mode="IN" include="pk" optional="false"/>
        <attribute name="statusId" type="String" mode="IN" optional="false"/>
        <attribute name="oldStatusId" type="String" mode="OUT" optional="true"/>
    </service>

    <service name="createCommunicationEventInterface" engine="interface" location="" invoke="">
        <description>Create a Communication Event with or w/o permission check</description>
        <auto-attributes entity-name="CommunicationEvent" include="nonpk" mode="IN" optional="true"/>
        <auto-attributes entity-name="CommunicationEvent" include="pk" mode="INOUT" optional="true"/>
        <attribute name="productId" type="String" mode="IN" optional="true"/>
        <attribute name="orderId" type="String" mode="IN" optional="true"/>
        <attribute name="custRequestId" type="String" mode="IN" optional="true"/>
        <!-- SCIPIO (01/26/2019): This should fix the missing webSiteId for all the communication services -->
        <attribute name="webSiteId" type="String" mode="IN" optional="true"/>
        <attribute name="action" type="String" mode="IN" optional="true"/><!-- to indicate any special action like: REPLY, REPLYALL, FORWARD or empty for no special action-->
        <override name="headerString" allow-html="any"/>
        <override name="content" allow-html="any"/>
        <override name="messageId" allow-html="any"/>
        <override name="subject" allow-html="any"/>
    </service>
    <service name="createCommunicationEvent" engine="simple"
            location="component://party/script/org/ofbiz/party/communication/CommunicationEventServices.xml" invoke="createCommunicationEventWithPermission" auth="true">
        <description>Create a Communication Event with permission check</description>
        <permission-service service-name="partyCommunicationEventPermissionCheck" main-action="CREATE"/>
        <implements service="createCommunicationEventInterface"/>
    </service>
    <service name="createCommunicationEventWithoutPermission" engine="simple"
            location="component://party/script/org/ofbiz/party/communication/CommunicationEventServices.xml" invoke="createCommunicationEventWithoutPermission" auth="true">
        <description>Create a Communication Event without permission check</description>
        <implements service="createCommunicationEventInterface"/>
    </service>

    <service name="updateCommunicationEvent" engine="simple"
            location="component://party/script/org/ofbiz/party/communication/CommunicationEventServices.xml" invoke="updateCommunicationEvent" auth="true">
        <description>Update a Communication Event</description>
        <permission-service service-name="partyCommunicationEventPermissionCheck" main-action="UPDATE"/>
        <auto-attributes entity-name="CommunicationEvent" include="pk" mode="IN" optional="false"/>
        <auto-attributes entity-name="CommunicationEvent" include="nonpk" mode="IN" optional="true"/>
        <attribute name="contactMechPurposeTypeIdFrom" type="String" mode="IN" optional="true"><description>Set a specific purpose for the originator email</description></attribute>
        <attribute name="oldStatusId" type="String" mode="OUT" optional="true"/>
        <override name="messageId" allow-html="any"/>
        <override name="content" allow-html="any"/>
        <override name="subject" allow-html="any"/>
    </service>
    <service name="deleteCommunicationEvent" engine="simple"
        location="component://party/script/org/ofbiz/party/communication/CommunicationEventServices.xml" invoke="deleteCommunicationEvent" auth="true">
        <description>Delete a Communication Event, optionally delete the attached content and dataresource</description>
        <permission-service service-name="partyCommunicationEventPermissionCheck" main-action="DELETE"/>
        <auto-attributes entity-name="CommunicationEvent" include="pk" mode="IN" optional="false"/>
        <attribute name="delContentDataResource" type="String" mode="IN" optional="true"/>
    </service>
    <service name="deleteCommunicationEventWorkEffort" engine="simple"
        location="component://party/script/org/ofbiz/party/communication/CommunicationEventServices.xml" invoke="deleteCommunicationEventWorkEffort" auth="true">
        <description>Delete a Communication Event, optionally delete the attached content and dataresource
            and when this is the only communication event connected to a workeffort delete the workeffort too.</description>
        <permission-service service-name="partyCommunicationEventPermissionCheck" main-action="DELETE"/>
        <auto-attributes entity-name="CommunicationEvent" include="pk" mode="IN" optional="false"/>
        <attribute name="delContentDataResource" type="String" mode="IN" optional="true"/>
    </service>
    <service name="createCommunicationEventPurpose" engine="simple"
            location="component://party/script/org/ofbiz/party/communication/CommunicationEventServices.xml" invoke="createCommunicationEventPurpose" auth="true">
        <description>Create a Communication Event Purpose</description>
        <permission-service service-name="partyCommunicationEventPermissionCheck" main-action="CREATE"/>
        <auto-attributes entity-name="CommunicationEventPurpose" include="pk" mode="IN" optional="false"/>
        <auto-attributes entity-name="CommunicationEventPurpose" include="nonpk" mode="IN" optional="true"/>
    </service>
    <service name="updateCommunicationEventPurpose" default-entity-name="CommunicationEventPurpose" engine="entity-auto" invoke="update" auth="true">
        <description>Update a CommunicationEventPurpose</description>
        <auto-attributes include="pk" mode="IN" optional="false"/>
        <auto-attributes include="nonpk" mode="IN" optional="true"/>
    </service>
    <service name="removeCommunicationEventPurpose" engine="simple"
            location="component://party/script/org/ofbiz/party/communication/CommunicationEventServices.xml" invoke="removeCommunicationEventPurpose" auth="true">
        <description>Remove a Communication Event Purpose</description>
        <permission-service service-name="partyCommunicationEventPermissionCheck" main-action="DELETE"/>
        <auto-attributes entity-name="CommunicationEventPurpose" include="pk" mode="IN" optional="false"/>
    </service>
    <service name="createCustRequestCommEvent" engine="simple"
            location="component://party/script/org/ofbiz/party/communication/CommunicationEventServices.xml" invoke="createCustRequestCommEvent" auth="true">
        <description>Create a CustRequestCommEvent</description>
        <permission-service service-name="partyCommunicationEventPermissionCheck" main-action="CREATE"/>
        <auto-attributes entity-name="CustRequestCommEvent" include="pk" mode="IN" optional="false"/>
    </service>
    <service name="deleteCustRequestCommEvent" default-entity-name="CustRequestCommEvent" engine="entity-auto" invoke="delete" auth="true">
        <description>Delete a CustRequestCommEvent</description>
        <permission-service service-name="partyCommunicationEventPermissionCheck" main-action="DELETE"/>
        <auto-attributes include="pk" mode="IN"/>
    </service>
    <service name="createCommunicationEventRoleInterface" engine="interface" location="" invoke="">
        <description>Create a Communication Event Role with or w/o permission check</description>
        <auto-attributes entity-name="CommunicationEventRole" include="pk" mode="IN" optional="false"/>
        <auto-attributes entity-name="CommunicationEventRole" include="nonpk" mode="IN" optional="true"/>
    </service>
    <service name="createCommunicationEventRole" engine="simple"
            location="component://party/script/org/ofbiz/party/communication/CommunicationEventServices.xml" invoke="createCommunicationEventRole" auth="true">
        <description>Create a Communication Event Role with permission check</description>
        <permission-service service-name="partyCommunicationEventPermissionCheck" main-action="CREATE"/>
        <implements service="createCommunicationEventRoleInterface"/>
    </service>
    <service name="createCommunicationEventRoleWithoutPermission" engine="simple"
            location="component://party/script/org/ofbiz/party/communication/CommunicationEventServices.xml" invoke="createCommunicationEventRole" auth="true">
        <description>Create a Communication Event Role without permission check</description>
        <implements service="createCommunicationEventRoleInterface"/>
    </service>
    <service name="updateCommunicationEventRole" engine="simple"
            location="component://party/script/org/ofbiz/party/communication/CommunicationEventServices.xml" invoke="updateCommunicationEventRole" auth="true">
        <description>Update a Communication Event Role</description>
        <permission-service service-name="partyCommunicationEventPermissionCheck" main-action="UPDATE"/>
        <auto-attributes entity-name="CommunicationEventRole" include="pk" mode="IN" optional="false"/>
        <auto-attributes entity-name="CommunicationEventRole" include="nonpk" mode="IN" optional="true"/>
    </service>
    <service name="removeCommunicationEventRole" engine="simple"
            location="component://party/script/org/ofbiz/party/communication/CommunicationEventServices.xml" invoke="removeCommunicationEventRole" auth="true">
        <description>Remove a Communication Event Role</description>
        <permission-service service-name="partyCommunicationEventPermissionCheck" main-action="DELETE"/>
        <auto-attributes entity-name="CommunicationEventRole" include="pk" mode="IN" optional="false"/>
        <attribute name="deleteCommEventIfLast" mode="IN" type="String" optional="true"/><!-- "Y" for true -->
        <attribute name="delContentDataResource" type="String" mode="IN" optional="true"/>
    </service>
    <service name="createCommEventWorkEffort" engine="simple" location="component://workeffort/script/org/ofbiz/workeffort/workeffort/WorkEffortSimpleServices.xml" invoke="makeCommunicationEventWorkEffort" auth="true"  >
        <description>Creates a WorkEffort entity and CommunicationEventWorkEff</description>
        <auto-attributes include="pk" mode="INOUT" optional="true" entity-name="WorkEffort"/>
        <auto-attributes include="nonpk" mode="IN" optional="true" entity-name="WorkEffort"/>
        <auto-attributes include="pk" mode="INOUT" optional="false" entity-name="CommunicationEventWorkEff"/>
        <auto-attributes include="nonpk" mode="IN" optional="true" entity-name="CommunicationEventWorkEff"/>
        <override name="workEffortId" optional="true"/>
        <override name="currentStatusId" optional="false">
            <type-validate>
                <fail-property resource="WorkEffortUiLabels" property="PartyRequiredFieldMissingCurrentStatusId"/>
            </type-validate>
        </override>
        <override name="workEffortName" optional="false">
            <type-validate>
                <fail-property resource="WorkEffortUiLabels" property="PartyRequiredFieldMissingWorkEffortName"/>
            </type-validate>
        </override>
        <override name="workEffortTypeId" optional="false">
            <type-validate>
                <fail-property resource="WorkEffortUiLabels" property="PartyRequiredFieldMissingWorkEffortTypeId"/>
            </type-validate>
        </override>
    </service>
    <service name="setCommEventRoleToRead" engine="simple" default-entity-name="CommunicationEventRole"
        location="component://party/script/org/ofbiz/party/communication/CommunicationEventServices.xml" invoke="setCommEventRoleToRead" auth="false">
        <description>Marks a communication event as read</description>
        <auto-attributes include="pk" mode="IN" optional="true"/>
        <override name="communicationEventId" optional="false"/>
    </service>
    <service name="sendCommEventAsEmail" engine="java"
            location="org.ofbiz.party.communication.CommunicationEventServices" invoke="sendCommEventAsEmail" auth="true"
            transaction-timeout="7200">  <!-- set transaction time out for 2 hours, since this sometimes may run as an async service to send emails to lots of people -->
        <description>Sends a communication event as a single-part email using sendMail.  All parameters come from CommunicationEvent, which must
            be of type EMAIL_COMMUNICATION. Will look for a contactMechIdTo to send the emails</description>
        <attribute name="communicationEventId" type="String" mode="IN" optional="false"/>
    </service>
    <!-- ftp communicationEvent services -->
    <service name="sendCommEventAsFtp" engine="java"
             location="org.ofbiz.party.communication.CommunicationEventServices" invoke="sendCommEventAsFtp" auth="true"
             transaction-timeout="7200">  <!-- set transaction time out for 2 hours, since this sometimes may last long during big file transfer -->
        <description>Sends communication event associated contents to a ftp server. All parameters come from CommunicationEvent, which must
            be of type FILE_TRANSFER_COMM. Will look for a contactMechIdTo to connect to Ftp</description>
        <attribute name="communicationEventId" type="String" mode="IN"/>
    </service>
    <service name="createCommEventFromFtpTransfer" engine="java"
             location="org.ofbiz.party.communication.CommunicationEventServices" invoke="createCommEventFromFtpTransfer" auth="true">
        <description>Creates a CommunicationEvent record based on information before
            running a sendContentToFtp service (to be used via ECA)
        </description>
        <attribute name="partyId" type="String" mode="IN" optional="true"/>
        <attribute name="contentId" type="String" mode="IN"/>
        <attribute name="contactMechId" type="String" mode="IN"/>
        <attribute name="communicationEventId" type="String" mode="OUT"/>
    </service>


    <!--  email to communication event ECA services -->
    <service name="createCommEventFromEmail" engine="java"
        location="org.ofbiz.party.communication.CommunicationEventServices" invoke="createCommEventFromEmail" auth="true">
        <description>
                Creates a CommunicationEvent record based on information before running a sendMail service (to be used via ECA)
        </description>
        <attribute name="partyId" type="String" mode="IN" optional="true"/>
        <attribute name="subject" type="String" mode="IN" optional="false"/>
        <attribute name="sendFrom" type="String" mode="IN" optional="false"/>
        <attribute name="sendTo" type="String" mode="IN" optional="false"/>
        <attribute name="contentType" type="String" mode="IN" optional="true"/>
        <attribute name="statusId" type="String" mode="IN" optional="true"/>
        <attribute name="orderId" type="String" mode="IN" optional="true"/>
        <attribute name="communicationEventId" type="String" mode="OUT"/>
    </service>
    <service name="updateCommEventAfterEmail" engine="java"
        location="org.ofbiz.party.communication.CommunicationEventServices" invoke="updateCommEventAfterEmail" auth="true">
        <description>
                Updates a CommunicationEvent record after running a sendMail service (to be used via ECA)
        </description>
        <attribute name="communicationEventId" type="String" mode="IN" optional="false"/>
        <attribute name="messageWrapper" type="org.ofbiz.service.mail.MimeMessageWrapper" mode="IN" optional="false"/>
    </service>

    <service name="storeIncomingEmail" engine="java"
        location="org.ofbiz.party.communication.CommunicationEventServices" invoke="storeIncomingEmail" auth="true">
        <description>
            Process incoming email. Try to determine partyIdFrom from the first SendFrom email address. datetimeStarted and datetimeEnded are the
            sent and received dates respectively, partyIdTo is from the first SendTo email address or the delivered-to address. If the parties are not found,
            the email addresses are stored in CommunicationEvent.note
            If however it is detected as spam (external) or when the 'from' email address is missing, the service will not return a communicationEventId.
            If the party cannot be found the status of the communicationEvent will be set to: COM_UNKNOWN_PARTY.
            If the parties are found the status is set to COM_ENTERED
        </description>
        <attribute name="messageWrapper" type="org.ofbiz.service.mail.MimeMessageWrapper" mode="IN"/>
        <attribute name="communicationEventId" type="String" mode="OUT" optional="true"/>
        <attribute name="statusId" type="String" mode="OUT" optional="true"/>
    </service>

    <service name="sendEmailToContactList" engine="java"
            location="org.ofbiz.party.communication.CommunicationEventServices" invoke="sendEmailToContactList" auth="true"
            use-transaction="true" transaction-timeout="300" max-retry="3">  <!-- Individual emails will be wrapped in their own transactions -->
            <description>Send emails to members of a contact list, wrapping each email in its own transaction and tagging each member
                that has been sent, so if the whole effort is aborted, it can start over from the middle.  The max-retry is important because if this service is
                and some emails cannot sent, it will start again later and try again</description>
        <attribute name="contactListId" type="String" mode="IN" optional="false"/>
        <attribute name="communicationEventId" type="String" mode="IN" optional="false"/>
    </service>

    <service name="setCommEventComplete" engine="java"
        location="org.ofbiz.party.communication.CommunicationEventServices" invoke="setCommEventComplete" auth="true">
        <description>Sets the status of a communication event to COM_COMPLETE using the updateCommunicationEvent service,
            set datetimeEnded to now if not defined</description>
        <attribute name="communicationEventId" type="String" mode="IN" optional="false"/>
        <attribute name="partyIdFrom" type="String" mode="IN" optional="true"/>
    </service>

    <service name="sendEmailDated" engine="simple" use-transaction="false"
        location="component://party/script/org/ofbiz/party/communication/CommunicationEventServices.xml" invoke="sendEmailDated" auth="true">
        <description>Checks for email communication events with the status COM_IN_PROGRESS and a startdate which is expired, then send the email</description>
    </service>


    <!-- party content services -->
    <!-- old services
    <service name="createPartyContent" engine="simple" default-entity-name="Content"
        location="component://party/script/org/ofbiz/party/party/PartyServices.xml" invoke="createPartyContent" auth="false">
        <description>Create Party Associated Content</description>
        <auto-attributes include="nonpk" mode="IN" optional="true"/>
        <attribute name="uploadedFile" type="java.nio.ByteBuffer" mode="IN" optional="true"/>
        <attribute name="_uploadedFile_fileName" type="String" mode="IN" optional="true"/>
        <attribute name="_uploadedFile_contentType" type="String" mode="IN" optional="false"/>
        <attribute name="dataCategoryId" type="String" mode="IN" optional="true"/>
        <attribute name="statusId" type="String" mode="IN" optional="false"/>
        <attribute name="partyId" type="String" mode="IN" optional="true"/>
        <attribute name="contentId" type="String" mode="OUT" optional="false"/>
        <override name="contentTypeId" optional="false"/>
    </service>
    <service name="updatePartyContent" engine="simple" default-entity-name="Content"
        location="component://party/script/org/ofbiz/party/party/PartyServices.xml" invoke="updatePartyContent" auth="false">
        <description>Update a Party Content</description>
        <auto-attributes include="pk" mode="INOUT" optional="false"/>
        <auto-attributes include="nonpk" mode="IN" optional="true"/>
        <attribute name="uploadedFile" type="java.nio.ByteBuffer" mode="IN" optional="true"/>
        <attribute name="_uploadedFile_fileName" type="String" mode="IN" optional="true"/>
        <attribute name="_uploadedFile_contentType" type="String" mode="IN" optional="false"/>
        <attribute mode="IN" name="partyId" optional="true" type="String"/>
        <attribute mode="IN" name="dataCategoryId" optional="true" type="String"/>
    </service>
    -->
    <service name="createPartyContent" engine="simple" default-entity-name="PartyContent"
            location="component://party/script/org/ofbiz/party/content/PartyContentServices.xml" invoke="createPartyContent" auth="true">
        <description>Create a PartyContent record</description>
        <auto-attributes mode="IN" include="pk" optional="false"/>
        <auto-attributes mode="IN" include="nonpk" optional="true"/>
        <override name="fromDate" optional="true"/>
    </service>

    <service name="updatePartyContent" engine="simple" default-entity-name="PartyContent"
            location="component://party/script/org/ofbiz/party/content/PartyContentServices.xml" invoke="updatePartyContent" auth="true">
        <description>Update a PartyContent record</description>
        <auto-attributes mode="IN" include="pk" optional="false"/>
        <auto-attributes mode="IN" include="nonpk" optional="true"/>
    </service>

    <service name="removePartyContent" engine="simple" default-entity-name="PartyContent"
            location="component://party/script/org/ofbiz/party/content/PartyContentServices.xml" invoke="removePartyContent" auth="true">
        <description>Remove a PartyContent record</description>
        <auto-attributes mode="IN" include="pk" optional="false"/>
    </service>
    
    <service name="removePartyContentAndRelated" engine="group" auth="true"><!-- SCIPIO: added 2018-04-16 -->
        <description>Remove a PartyContent record and the Content record itself (SCIPIO)
            WARN: Does not delete files stored in the filesystem!</description>
        <group>
            <invoke name="removePartyContent"/>
            <invoke name="removeContentAndRelated"/>
        </group>
    </service>

    <service name="createPartyTextContent" engine="group" transaction-timeout="300" auth="true">
        <description>Creates a Text Document DataResource and Content Records</description>
        <group>
            <invoke name="createTextContent" result-to-context="true"/>
            <invoke name="createPartyContent"/>
        </group>
    </service>

    <service name="uploadPartyContentFile" engine="group" transaction-timeout="300">
        <description>Upload and attach a file to a party</description>
        <group>
            <invoke name="createContentFromUploadedFile" result-to-context="true"/>
            <invoke name="createPartyContent"/>
        </group>
    </service>

    <service name="getPartyEmail" engine="simple"
        location="component://party/script/org/ofbiz/party/party/PartyServices.xml" invoke="getPartyEmail" auth="false">
        <description>Get the main party Email address</description>
        <attribute name="partyId" type="String" mode="IN" optional="false"/>
        <attribute name="contactMechPurposeTypeId" type="String" mode="IN" optional="false" default-value="PRIMARY_EMAIL"/>
        <attribute name="emailAddress" type="String" mode="OUT" optional="true"/>
        <attribute name="contactMechId" type="String" mode="OUT" optional="true"/>
    </service>

    <service name="getPartyTelephone" engine="simple"
        location="component://party/script/org/ofbiz/party/party/PartyServices.xml" invoke="getPartyTelephone" auth="false">
        <description>Get the party Email Telephone</description>
        <attribute name="contactMechId" type="String" mode="OUT" optional="true"/>
        <attribute name="partyId" type="String" mode="IN" optional="false"/>
        <attribute name="contactMechPurposeTypeId" type="String" mode="INOUT" optional="true"/>
        <attribute name="countryCode" type="String" mode="OUT" optional="true"/>
        <attribute name="areaCode" type="String" mode="OUT" optional="true"/>
        <attribute name="contactNumber" type="String" mode="OUT" optional="true"/>
        <attribute name="extension" type="String" mode="OUT" optional="true"/>
    </service>

    <service name="getPartyPostalAddress" engine="simple"
        location="component://party/script/org/ofbiz/party/party/PartyServices.xml" invoke="getPartyPostalAddress" auth="false">
        <description>Get the party postal address</description>
        <attribute name="partyId" type="String" mode="IN" optional="false"/>
        <attribute name="contactMechPurposeTypeId" type="String" mode="INOUT" optional="true"/>
        <attribute name="contactMechId" type="String" mode="OUT" optional="true"/>
        <attribute name="address1" type="String" mode="OUT" optional="true"/>
        <attribute name="address2" type="String" mode="OUT" optional="true"/>
        <attribute name="directions" type="String" mode="OUT" optional="true"/>
        <attribute name="city" type="String" mode="OUT" optional="true"/>
        <attribute name="postalCode" type="String" mode="OUT" optional="true"/>
        <attribute name="stateProvinceGeoId" type="String" mode="OUT" optional="true"/>
        <attribute name="countyGeoId" type="String" mode="OUT" optional="true"/>
        <attribute name="countryGeoId" type="String" mode="OUT" optional="true"/>
    </service>

    <service name="createPartyCarrierAccount" default-entity-name="PartyCarrierAccount" engine="entity-auto" invoke="create" auth="true">
        <description>Create a PartyCarrierAccount record</description>
        <auto-attributes mode="IN" include="pk" optional="false"/>
        <auto-attributes mode="IN" include="nonpk" optional="true"/>
        <override type="Timestamp" mode="IN" name="fromDate" optional="true"/>
        <override type="String" mode="IN" name="accountNumber" optional="false"/>
    </service>

    <service name="updatePartyCarrierAccount" default-entity-name="PartyCarrierAccount" engine="entity-auto" invoke="update" auth="true">
        <description>Update a PartyCarrierAccount record</description>
        <auto-attributes mode="IN" include="pk" optional="false"/>
        <auto-attributes mode="IN" include="nonpk" optional="true"/>
    </service>

    <service name="sendUpdatePersonalInfoEmailNotification" engine="simple"
            location="component://party/script/org/ofbiz/party/party/PartyServices.xml" invoke="sendUpdatePersonalInfoEmailNotification" auth="false">
        <attribute name="partyId" type="String" mode="IN" optional="true"/>
        <attribute name="updatedUserLogin" type="org.ofbiz.entity.GenericValue" mode="IN" optional="true"/>
        <attribute name="productStoreId" type="String" mode="IN" optional="true"/>
    </service>
    <service name="sendCreatePartyEmailNotification" engine="simple"
            location="component://party/script/org/ofbiz/party/party/PartyServices.xml" invoke="sendCreatePartyEmailNotification" auth="false">
        <attribute name="partyId" type="String" mode="IN" optional="false"/>
        <attribute name="emailAddress" type="String" mode="IN" optional="false"/>
        <attribute name="productStoreId" type="String" mode="IN" optional="false"/>
    </service>

    <!-- Email address verification services-->
    <service name="createEmailAddressVerification" engine="java" default-entity-name="EmailAddressVerification"
            location="org.ofbiz.party.contact.ContactMechServices" invoke="createEmailAddressVerification">
        <attribute name="emailAddress" type="String" mode="IN" optional="false"/>
        <attribute name="verifyHash" type="String" mode="OUT" optional="false"/>
        <attribute name="expireDate" type="String" mode="IN" optional="true"/>
    </service>
    <service name="sendVerifyEmailAddressNotification" engine="simple"
        location="component://party/script/org/ofbiz/party/contact/ContactMechServices.xml" invoke="sendVerifyEmailAddressNotification">
        <attribute name="emailAddress" type="String" mode="IN" optional="false"/>
    </service>
    <service name="verifyEmailAddress" engine="simple"
             location="component://party/script/org/ofbiz/party/contact/ContactMechServices.xml" invoke="verifyEmailAddress">
        <attribute name="verifyHash" type="String" mode="IN" optional="false"/>
    </service>

    <!-- Party Invitation Services -->
    <service name="createPartyInvitation" engine="simple"
            location="component://party/script/org/ofbiz/party/party/PartyInvitationServices.xml" invoke="createPartyInvitation">
        <description>Create Party Invitation</description>
        <auto-attributes entity-name="PartyInvitation" include="pk" mode="IN" optional="true"/>
        <auto-attributes entity-name="PartyInvitation" include="nonpk" mode="IN" optional="true"/>
        <override name="partyInvitationId" mode="OUT" optional="false"/>
    </service>
    <service name="updatePartyInvitation" engine="simple"
            location="component://party/script/org/ofbiz/party/party/PartyInvitationServices.xml" invoke="updatePartyInvitation">
        <description>Update Party Invitation</description>
        <auto-attributes entity-name="PartyInvitation" include="pk" mode="IN" optional="false"/>
        <auto-attributes entity-name="PartyInvitation" include="nonpk" mode="IN" optional="true"/>
    </service>
    <service name="deletePartyInvitation" engine="simple"
            location="component://party/script/org/ofbiz/party/party/PartyInvitationServices.xml" invoke="deletePartyInvitation">
        <description>Remove Party Invitation</description>
        <auto-attributes entity-name="PartyInvitation" include="pk" mode="IN" optional="false"/>
    </service>
    <service name="createPartyInvitationGroupAssoc" engine="simple"
            location="component://party/script/org/ofbiz/party/party/PartyInvitationServices.xml" invoke="createPartyInvitationGroupAssoc">
        <description>Create PartyInvitationGroupAssoc</description>
        <auto-attributes entity-name="PartyInvitationGroupAssoc" include="pk" mode="IN" optional="false"/>
    </service>
    <service name="deletePartyInvitationGroupAssoc" engine="simple"
            location="component://party/script/org/ofbiz/party/party/PartyInvitationServices.xml" invoke="deletePartyInvitationGroupAssoc">
        <description>Remove PartyInvitationGroupAssoc</description>
        <auto-attributes entity-name="PartyInvitationGroupAssoc" include="pk" mode="IN" optional="false"/>
    </service>
    <service name="createPartyInvitationRoleAssoc" engine="simple"
            location="component://party/script/org/ofbiz/party/party/PartyInvitationServices.xml" invoke="createPartyInvitationRoleAssoc">
        <description>Create PartyInvitationRoleAssoc</description>
        <auto-attributes entity-name="PartyInvitationRoleAssoc" include="pk" mode="IN" optional="false"/>
    </service>
    <service name="deletePartyInvitationRoleAssoc" engine="simple"
            location="component://party/script/org/ofbiz/party/party/PartyInvitationServices.xml" invoke="deletePartyInvitationRoleAssoc">
        <description>Remove PartyInvitationRoleAssoc</description>
        <auto-attributes entity-name="PartyInvitationRoleAssoc" include="pk" mode="IN" optional="false"/>
    </service>
    <service name="acceptPartyInvitation" engine="simple"
            location="component://party/script/org/ofbiz/party/party/PartyInvitationServices.xml" invoke="acceptPartyInvitation">
        <permission-service service-name="accAndDecPartyInvitationPermissionCheck"/>
        <attribute name="partyInvitationId" type="String" mode="IN" optional="false"/>
        <attribute name="partyId" type="String" mode="IN" optional="false"/>
    </service>
    <service name="declinePartyInvitation" engine="simple"
            location="component://party/script/org/ofbiz/party/party/PartyInvitationServices.xml" invoke="declinePartyInvitation">
        <permission-service service-name="accAndDecPartyInvitationPermissionCheck"/>
        <attribute name="partyInvitationId" type="String" mode="IN" optional="false"/>
    </service>
    <service name="cancelPartyInvitation" engine="simple"
            location="component://party/script/org/ofbiz/party/party/PartyInvitationServices.xml" invoke="cancelPartyInvitation">
        <permission-service service-name="cancelPartyInvitationPermissionCheck"/>
        <attribute name="partyInvitationId" type="String" mode="IN" optional="false"/>
    </service>

    <!-- Permission checking services-->
    <service name="partyBasePermissionCheck" engine="simple"
            location="component://party/script/org/ofbiz/party/party/PartyPermissionServices.xml" invoke="basePermissionCheck">
        <description>
            Performs a basic Party Manager security check. The user must have one of the base PARTYMGR
            CRUD+ADMIN permissions.
        </description>
        <implements service="permissionInterface"/>
    </service>
    <service name="partyIdPermissionCheck" engine="simple"
            location="component://party/script/org/ofbiz/party/party/PartyPermissionServices.xml" invoke="basePlusPartyIdPermissionCheck">
        <description>
            Performs a party ID security check. The userLogin partyId must equal
            the partyId parameter, or the logged-in user must have the correct permission
            to perform the operation.
        </description>
        <implements service="permissionInterface"/>
        <attribute name="partyId" type="String" mode="INOUT" optional="true"/>
    </service>
    <service name="partyStatusPermissionCheck" engine="simple"
            location="component://party/script/org/ofbiz/party/party/PartyPermissionServices.xml" invoke="partyStatusPermissionCheck">
        <description>
            Performs a party status security check. The userLogin partyId must equal the partyId parameter OR
            the user must have one of the base PARTYMGR or PARTYMGR_STS CRUD+ADMIN permissions.
        </description>
        <implements service="permissionInterface"/>
        <attribute name="partyId" type="String" mode="IN" optional="true"/>
    </service>
    <service name="partyGroupPermissionCheck" engine="simple"
            location="component://party/script/org/ofbiz/party/party/PartyPermissionServices.xml" invoke="partyGroupPermissionCheck">
        <description>
            Performs a party group security check. The userLogin partyId must equal the partyId parameter OR
            the user has one of the base PARTYMGR or PARTYMGR_GRP CRUD+ADMIN permissions.
        </description>
        <implements service="permissionInterface"/>
        <attribute name="partyId" type="String" mode="INOUT" optional="true"/>
    </service>
    <service name="partyDatasourcePermissionCheck" engine="simple"
            location="component://party/script/org/ofbiz/party/party/PartyPermissionServices.xml" invoke="partyDatasourcePermissionCheck">
        <description>
            Performs a party datasource security check. The user must have one of the base PARTYMGR or
            PARTYMGR_SRC CRUD+ADMIN permissions.
        </description>
        <implements service="permissionInterface"/>
    </service>
    <service name="partyRolePermissionCheck" engine="simple"
            location="component://party/script/org/ofbiz/party/party/PartyPermissionServices.xml" invoke="partyRolePermissionCheck">
        <description>
            Performs a party role security check. The user must have one of the base PARTYMGR or
            PARTYMGR_ROLE CRUD+ADMIN permissions.
        </description>
        <implements service="permissionInterface"/>
        <attribute name="partyId" type="String" mode="INOUT" optional="true"/>
    </service>
    <service name="partyRelationshipPermissionCheck" engine="simple"
            location="component://party/script/org/ofbiz/party/party/PartyPermissionServices.xml" invoke="partyRelationshipPermissionCheck">
        <description>
            Performs a party relationship security check. The user must have one of the base PARTYMGR or
            PARTYMGR_REL CRUD+ADMIN permissions.
        </description>
        <implements service="permissionInterface"/>
        <attribute name="partyIdFrom" type="String" mode="IN" optional="true"/>
    </service>
    <service name="partyContactMechPermissionCheck" engine="simple"
            location="component://party/script/org/ofbiz/party/party/PartyPermissionServices.xml" invoke="partyContactMechPermissionCheck">
        <description>
            Performs a party contact mech security check. The userLogin partyId must equal the partyId parameter OR
            the user must have one of the base PARTYMGR or PARTYMGR_PCM CRUD+ADMIN permissions.
        </description>
        <implements service="permissionInterface"/>
        <attribute name="partyId" type="String" mode="IN" optional="true"/>
    </service>
    <service name="accAndDecPartyInvitationPermissionCheck" engine="simple"
            location="component://party/script/org/ofbiz/party/party/PartyPermissionServices.xml" invoke="accAndDecPartyInvitationPermissionCheck">
        <description>
            Performs accept and decline PartyInvitation security check. The userLogin partyId must equal the
            partyIdTo in PartyInvitation OR partyId fetched using emailAdress in PartyInvitation.
            The user with PARTYMGR_UPDATE permission can also perform this function.
        </description>
        <implements service="permissionInterface"/>
        <attribute name="partyInvitationId" type="String" mode="IN" optional="false"/>
    </service>
    <service name="cancelPartyInvitationPermissionCheck" engine="simple"
            location="component://party/script/org/ofbiz/party/party/PartyPermissionServices.xml" invoke="cancelPartyInvitationPermissionCheck">
        <description>
            Performs cancel PartyInvitation security check. The userLogin partyId must equal the
            partyId/partyIdFrom in PartyInvitation OR partyId fetched using emailAdress in PartyInvitation.
            The user with PARTYMGR_UPDATE permission can also perform this function.
        </description>
        <implements service="permissionInterface"/>
        <attribute name="partyInvitationId" type="String" mode="IN" optional="false"/>
    </service>
    <service name="partyCommunicationEventPermissionCheck" engine="simple"
            location="component://party/script/org/ofbiz/party/party/PartyPermissionServices.xml" invoke="partyCommunicationEventPermissionCheck">
        <description>Party CommunicationEvents Permission Checking Logic</description>
        <implements service="permissionInterface"/>
        <attribute name="partyIdFrom" type="String" mode="IN" optional="true"/>
        <attribute name="partyIdTo" type="String" mode="IN" optional="true"/>
    </service>
    <service name="createPostalAddressAndPurposes" engine="simple" location="component://party/script/org/ofbiz/party/contact/PartyContactMechServices.xml" invoke="createPostalAddressAndPurposes">
        <description>Create postal address, purposes and set them defaults</description>
        <implements service="createPartyPostalAddress"/>
        <attribute name="setShippingPurpose" type="String" mode="IN" optional="true"/>
        <attribute name="setBillingPurpose" type="String" mode="IN" optional="true"/>
        <attribute name="productStoreId" type="String" mode="IN" optional="true"/>
    </service>
    <service name="updatePostalAddressAndPurposes" engine="simple" location="component://party/script/org/ofbiz/party/contact/PartyContactMechServices.xml" invoke="updatePostalAddressAndPurposes">
        <description>Update postal address, purposes and set them defaults. The setShippingPurpose and setBillingPurpose enable the service to create purposes for PostalAddress and make them default addresses of party
            (SCIPIO: Note: This is a PartyProfileDefault- and UI-oriented old stock service; see implementation for quirks)</description>
        <!-- SCIPIO: Note: This service has special behavior: If the passed contactMechId is both bill and ship default in PartyProfileDefault,
            it will keep the previous PartyContactMech unexpired; in other words, it is designed to target one of the
            PartyProfileDefault bill or ship addresses while leaving the other as-is. It is not a substitute for updatePartyPostalAddress 
            or other generic contact mech update services. -->
        <implements service="updatePartyPostalAddress"/>
        <attribute name="setShippingPurpose" type="String" mode="IN" optional="true"/>
        <attribute name="setBillingPurpose" type="String" mode="IN" optional="true"/>
        <attribute name="productStoreId" type="String" mode="IN" optional="true"/>
        <override name="contactMechId" optional="false"/>
    </service>
    <service name="updateContactMechAndPurposes" engine="simple" location="component://party/script/org/ofbiz/party/contact/PartyContactMechServices.xml" invoke="updateContactMechAndPurposes">
        <description>Update postal address, telecom number and purposes. The setShippingPurpose and setBillingPurpose enable the service to create purposes for TelecomNumber
            (SCIPIO: Note: This is a PartyProfileDefault- and UI-oriented old stock service; see implementation for quirks)</description>
        <!-- SCIPIO: Note: See updatePostalAddressAndPurposes for warnings -->
        <implements service="updatePostalAddressAndPurposes"/>
        <auto-attributes entity-name="TelecomNumber" include="nonpk" mode="IN" optional="true"/>
        <attribute name="phoneContactMechId" type="String" mode="IN" optional="true"/>
    </service>
    <service name="createUpdatePerson" engine="simple" default-entity-name="Person"
            location="component://party/script/org/ofbiz/party/party/PartyServices.xml" invoke="createUpdatePerson" auth="false">
        <description>Create and Update a person</description>
        <auto-attributes mode="INOUT" include="pk" optional="true"/>
        <auto-attributes mode="IN" include="nonpk" optional="true"/>
        <attribute name="userLogin" type="org.ofbiz.entity.GenericValue" mode="IN" optional="true"/>
        <override name="firstName" optional="false"/>
        <override name="lastName" optional="false"/>
    </service>
    <service name="createUpdatePartyTelecomNumber" engine="simple"
            location="component://party/script/org/ofbiz/party/contact/PartyContactMechServices.xml" invoke="createUpdatePartyTelecomNumber" auth="false">
        <description>Create and Update telecom number</description>
        <attribute name="partyId" type="String" mode="IN" optional="false"/>
        <auto-attributes entity-name="PartyContactMech" include="all" mode="IN" optional="true"/>
        <auto-attributes entity-name="TelecomNumber" include="nonpk" mode="IN" optional="true"/>
        <attribute name="userLogin" type="org.ofbiz.entity.GenericValue" mode="IN" optional="true"/>
        <attribute name="contactMechPurposeTypeId" type="String" mode="IN" optional="true"/>
        <attribute name="roleTypeId" type="String" mode="IN" optional="true"/>
        <attribute name="contactMechId" type="String" mode="INOUT" optional="true"/>
    </service>
    <service name="createUpdatePartyEmailAddress" engine="simple"
        location="component://party/script/org/ofbiz/party/contact/PartyContactMechServices.xml" invoke="createUpdatePartyEmailAddress" auth="false">
        <description>Create and Update email address</description>
        <attribute name="partyId" type="String" mode="IN" optional="true"/>
        <attribute name="userLogin" type="org.ofbiz.entity.GenericValue" mode="IN" optional="true"/>
        <attribute name="contactMechPurposeTypeId" type="String" mode="IN" optional="true"/>
        <attribute name="emailAddress" type="String" mode="INOUT" optional="false"/>
        <attribute name="contactMechId" type="String" mode="IN" optional="true"/>
        <attribute name="contactMechId" type="String" mode="OUT" optional="false"/>
    </service>
    <service name="createUpdatePartyPostalAddress" engine="simple"
        location="component://party/script/org/ofbiz/party/contact/PartyContactMechServices.xml" invoke="createUpdatePartyPostalAddress" auth="false">
        <description>Create or Update a postal address</description>
        <attribute name="partyId" type="String" mode="IN" optional="false"/>
        <auto-attributes entity-name="PartyContactMech" include="all" mode="IN" optional="true"/>
        <auto-attributes entity-name="PostalAddress" include="nonpk" mode="IN" optional="true"/>
        <attribute name="userLogin" type="org.ofbiz.entity.GenericValue" mode="IN" optional="true"/>
        <attribute name="contactMechPurposeTypeId" type="String" mode="IN" optional="true"/>
        <attribute name="contactMechId" type="String" mode="INOUT" optional="true"/>
        <!-- SCIPIO: 2018-09-10: TODO: REVIEW: new code from upstream, usually logical, but poor code location to enforce this...
        <override name="address1" optional="false">
            <type-validate>
                <fail-property resource="PartyErrorUiLabels" property="PartyRequiredFieldMissingAddress1"/>
            </type-validate>
        </override>
        <override name="city" optional="false">
            <type-validate>
                <fail-property resource="PartyErrorUiLabels" property="PartyRequiredFieldMissingCity"/>
            </type-validate>
        </override>
        <override name="postalCode" optional="false">
            <type-validate>
                <fail-property resource="PartyErrorUiLabels" property="PartyRequiredFieldMissingPostalCode"/>
            </type-validate>
        </override>
        -->
    </service>

     <!--  bounced message processing -->
    <service name="processBouncedMessage" engine="java"
            location="org.ofbiz.party.communication.CommunicationEventServices" invoke="processBouncedMessage">
        <implements service="mailProcessInterface"/>
    </service>

    <!--  log incoming message MCA -->
    <service name="logIncomingMessage" engine="java"
            location="org.ofbiz.party.communication.CommunicationEventServices" invoke="logIncomingMessage">
        <implements service="mailProcessInterface"/>
    </service>

    <service name="quickCreateCustomer" engine="simple"
            location="component://party/script/org/ofbiz/party/party/PartyServices.xml" invoke="quickCreateCustomer">
        <description>Create customer profile on basis of First Name ,Last Name and Email Address</description>
        <attribute name="firstName" type="String" mode="IN" optional="false"/>
        <attribute name="lastName" type="String" mode="IN" optional="false"/>
        <attribute name="emailAddress" type="String" mode="IN" optional="false"/>
        <attribute name="partyId" type="String" mode="OUT" optional="false"/>
        <attribute name="contactListId" type="String" mode="IN" optional="true"/>
        <attribute name="subscribeContactList" type="String" mode="IN" optional="true"/>
    </service>

    <service name="getPartyMainRole" engine="simple"
            location="component://party/script/org/ofbiz/party/party/PartyServices.xml" invoke="getPartyMainRole">
        <description>Get the main role of this party which is a child of the MAIN_ROLE roletypeId</description>
        <attribute name="partyId" type="String" mode="IN" optional="false"/>
        <attribute name="roleTypeId" type="String" mode="OUT" optional="true"/>
        <attribute name="description" type="String" mode="OUT" optional="true"/>
    </service>

    <service name="sendContactUsEmailToCompany" engine="simple"
            location="component://party/script/org/ofbiz/party/communication/CommunicationEventServices.xml" invoke="sendContactUsEmailToCompany" auth="false">
        <description>Create communication event and send mail to company</description>
        <implements service="createCommunicationEventWithoutPermission"/>
        <attribute name="emailAddress" type="String" mode="IN" optional="true"/>
        <attribute name="firstName" type="String" mode="IN" optional="true"/>
        <attribute name="lastName" type="String" mode="IN" optional="true"/>
        <attribute name="postalCode" type="String" mode="IN" optional="true"/>
        <attribute name="countryCode" type="String" mode="IN" optional="true"/>
        <attribute name="emailType" type="String" mode="IN" optional="true"/>
        <attribute name="productStoreId" type="String" mode="IN" optional="true"/>
        <override name="partyIdTo" optional="false">
            <type-validate>
                <fail-property resource="PartyErrorUiLabels" property="PartyRequiredFieldMissingPartyIdTo"/>
            </type-validate>
        </override>
    </service>
    
    <!-- send account activated email notification -->
    <service name="sendAccountActivatedEmailNotification" engine="simple"
            location="component://party/script/org/ofbiz/party/party/PartyServices.xml" invoke="sendAccountActivatedEmailNotification" auth="false">
        <attribute name="userLoginId" type="String" mode="IN" optional="false"/>
        <attribute name="productStoreId" type="String" mode="IN" optional="false"/>
    </service>
    <service name="createAgreementAttribute" default-entity-name="AgreementAttribute" engine="entity-auto" invoke="create" auth="true">
        <description>Create a AgreementAttribute entry</description>
        <auto-attributes include="pk" mode="IN" optional="false"/>
        <auto-attributes include="nonpk" mode="IN" optional="true"/>
    </service>
    <service name="updateAgreementAttribute" default-entity-name="AgreementAttribute" engine="entity-auto" invoke="update" auth="true">
        <description>Update a AgreementAttribute record</description>
        <auto-attributes include="pk" mode="IN" optional="false"/>
        <auto-attributes include="nonpk" mode="IN" optional="true"/>
    </service>
    <service name="deleteAgreementAttribute" default-entity-name="AgreementAttribute" engine="entity-auto" invoke="delete" auth="true">
        <description>Delete a AgreementAttribute record</description>
        <auto-attributes include="pk" mode="IN" optional="false"/>
    </service>

    <service name="importParty" engine="java"
        location="org.ofbiz.party.party.PartyServices" invoke="importParty" auth="true">
        <description>Import an party with related main role, company and contact info in csv format, will ignore parties already entered</description>
        <permission-service service-name="partyGroupPermissionCheck" main-action="CREATE"/>
        <attribute mode="IN" name="uploadedFile" type="java.nio.ByteBuffer" optional="true" />
    </service>
    <service name="createAgreementItemTypeAttr" default-entity-name="AgreementItemTypeAttr" engine="entity-auto" invoke="create" auth="true">
        <description>Create a AgreementItemTypeAttr entry</description>
        <auto-attributes include="pk" mode="IN" optional="false"/>
        <auto-attributes include="nonpk" mode="IN" optional="true"/>
    </service>
    <service name="updateAgreementItemTypeAttr" default-entity-name="AgreementItemTypeAttr" engine="entity-auto" invoke="update" auth="true">
        <description>Update a AgreementItemTypeAttr record</description>
        <auto-attributes include="pk" mode="IN" optional="false"/>
        <auto-attributes include="nonpk" mode="IN" optional="true"/>
    </service>
    <service name="deleteAgreementItemTypeAttr" default-entity-name="AgreementItemTypeAttr" engine="entity-auto" invoke="delete" auth="true">
        <description>Delete a AgreementItemTypeAttr record</description>
        <auto-attributes include="pk" mode="IN" optional="false"/>
    </service>
    
    <!-- Party Role services -->
    <service name="updateRoleType" default-entity-name="RoleType" engine="entity-auto" invoke="update" auth="true">
        <description>Update a RoleType Record</description>
        <auto-attributes mode="IN" include="pk"/>
        <auto-attributes mode="IN" include="nonpk" optional="true"/>
    </service>
    <service name="deleteRoleType" default-entity-name="RoleType" engine="entity-auto" invoke="delete" auth="true">
        <description>Delete a RoleType Record</description>
        <auto-attributes mode="IN" include="pk"/>
    </service>
    <service name="createRoleTypeAttr" default-entity-name="RoleTypeAttr" engine="entity-auto" invoke="create" auth="true">
        <description>Create a RoleTypeAttr Record</description>
        <auto-attributes mode="IN" include="pk"/>
        <auto-attributes mode="IN" include="nonpk" optional="true"/>
    </service>
    <service name="updateRoleTypeAttr" default-entity-name="RoleTypeAttr" engine="entity-auto" invoke="update" auth="true">
        <description>Update a RoleTypeAttr Record</description>
        <auto-attributes mode="IN" include="pk"/>
        <auto-attributes mode="IN" include="nonpk" optional="true"/>
    </service>
    <service name="deleteRoleTypeAttr" default-entity-name="RoleTypeAttr" engine="entity-auto" invoke="delete" auth="true">
        <description>Delete a RoleTypeAttr Record</description>
        <auto-attributes mode="IN" include="pk"/>
    </service>

    <service name="createNeedType" default-entity-name="NeedType" engine="entity-auto" invoke="create" auth="true">
        <description>Create a NeedType</description>
        <auto-attributes include="nonpk" mode="IN" optional="true"/>
        <auto-attributes include="pk" mode="INOUT" optional="true"/>
    </service>
    <service name="updateNeedType" default-entity-name="NeedType" engine="entity-auto" invoke="update" auth="true">
        <description>Update a NeedType</description>
        <auto-attributes include="nonpk" mode="IN" optional="true"/>
        <auto-attributes include="pk" mode="IN" optional="false"/>
    </service>
    <service name="deleteNeedType" default-entity-name="NeedType" engine="entity-auto" invoke="delete" auth="true">
        <description>Delete a NeedType</description>
        <auto-attributes include="pk" mode="IN" optional="false"/>
    </service>

    <!-- CommunicationEventPrpTyp services -->
    <service name="createCommunicationEventPrpTyp" default-entity-name="CommunicationEventPrpTyp" engine="entity-auto" invoke="create" auth="true">
        <description>Create a CommunicationEventPrpTyp</description>
        <auto-attributes include="nonpk" mode="IN" optional="true"/>
        <auto-attributes include="pk" mode="INOUT" optional="true"/>
    </service>
    <service name="updateCommunicationEventPrpTyp" default-entity-name="CommunicationEventPrpTyp" engine="entity-auto" invoke="update" auth="true">
        <description>Update a CommunicationEventPrpTyp</description>
        <auto-attributes include="pk" mode="IN" optional="false"/>
        <auto-attributes include="nonpk" mode="IN" optional="true"/>
    </service>
    <service name="deleteCommunicationEventPrpTyp" default-entity-name="CommunicationEventPrpTyp" engine="entity-auto" invoke="delete" auth="true">
        <description>Delete a CommunicationEventPrpTyp</description>
        <auto-attributes include="pk" mode="IN" optional="false"/>
    </service>

    <!-- SCIPIO: Login and Party Services - used by Social Logins -->
    <service name="createPartyLoginAndSecurityGroups" engine="java" location="com.ilscipio.scipio.party.PartyServices" invoke="createPartyLoginAndSecurityGroups" auth="true">
        <description>Service to create a person, a UserLogin and add standard security groups to the new user</description>
        <implements service="createPersonAndUserLogin"/>
        <implements service="addUserLoginToSecurityGroup"/>
    </service>
    
    <!-- SCIPIO -->
    <service name="findUserLogin" engine="java" location="com.ilscipio.scipio.party.PartyServices" invoke="findUserLogin" auth="true">
        <description>Service to check, if a UserLogin exists for a given userLoginId</description>  
        <attribute name="userLoginId" mode="IN" type="String" optional="false"/>
        <attribute name="responseMessage" mode="OUT" type="String" optional="false"/>
        <attribute name="exists" mode="OUT" type="Boolean" optional="false"/>
        <attribute name="userLogin" mode="OUT" type="String" optional="true"/>
    </service>

    <!-- SCIPIO -->
    <service name="countOldUnexpiredContactMechPurposes" engine="java" location="com.ilscipio.scipio.party.PartyServices" invoke="countOldUnexpiredContactMechPurposes" auth="true">
        <description>Count PartyContactMechPurpose and FacilityContactMechPurpose records that are not expired but whose associated XxxContactMech records are expired</description>  
        <attribute name="partyPurposeCount" mode="OUT" type="Long" optional="false"/>
        <attribute name="facilityPurposeCount" mode="OUT" type="Long" optional="false"/>
        <attribute name="totalPurposeCount" mode="OUT" type="Long" optional="false"/>
    </service>
    <!-- SCIPIO -->
    <service name="expireOldUnexpiredContactMechPurposes" engine="java" location="com.ilscipio.scipio.party.PartyServices" invoke="expireOldUnexpiredContactMechPurposes" auth="true">
        <description>Expire PartyContactMechPurpose and FacilityContactMechPurpose records that are not expired but whose associated XxxContactMech records are expired</description>  
        <attribute name="previewOnly" mode="IN" type="Boolean" optional="true" default-value="false">
            <description>If set to true, print values found to log instead of committing</description>
        </attribute>
        <attribute name="partyPurposeCount" mode="OUT" type="Long" optional="false"/>
        <attribute name="facilityPurposeCount" mode="OUT" type="Long" optional="false"/>
        <attribute name="totalPurposeCount" mode="OUT" type="Long" optional="false"/>
    </service>
</services>
