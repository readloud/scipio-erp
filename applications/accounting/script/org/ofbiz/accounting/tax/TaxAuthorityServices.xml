<?xml version="1.0" encoding="UTF-8"?>
<!--
This file is subject to the terms and conditions defined in the
files 'LICENSE' and 'NOTICE', which are part of this source
code package.
-->

<simple-methods xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:noNamespaceSchemaLocation="http://ofbiz.apache.org/dtds/simple-methods-v2.xsd">

    <!-- TaxAuthority methods -->
    <simple-method method-name="createTaxAuthority" short-description="create a TaxAuthority">
        <set value="_CREATE" field="securityAction"/>
        <check-permission permission="ACCOUNTING" action="${securityAction}">
            <fail-property resource="AccountingUiLabels" property="AccountingPermissionError"/>
        </check-permission>
        <check-errors/>

        <make-value entity-name="TaxAuthority" value-field="newEntity"/>
        <set-pk-fields map="parameters" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <create-value value-field="newEntity"/>
    </simple-method>
    <simple-method method-name="updateTaxAuthority" short-description="update a TaxAuthority">
        <set value="_UPDATE" field="securityAction"/>
        <check-permission permission="ACCOUNTING" action="${securityAction}">
            <fail-property resource="AccountingUiLabels" property="AccountingPermissionError"/>
        </check-permission>
        <check-errors/>

        <entity-one entity-name="TaxAuthority" value-field="lookedUpValue"/>
        <set-nonpk-fields map="parameters" value-field="lookedUpValue"/>
        <store-value value-field="lookedUpValue"/>
    </simple-method>
    <simple-method method-name="deleteTaxAuthority" short-description="delete a TaxAuthority">
        <set value="_DELETE" field="securityAction"/>
        <check-permission permission="ACCOUNTING" action="${securityAction}">
            <fail-property resource="AccountingUiLabels" property="AccountingPermissionError"/>
        </check-permission>
        <check-errors/>

        <entity-one entity-name="TaxAuthority" value-field="lookedUpValue"/>
        <remove-value value-field="lookedUpValue"/>
    </simple-method>

    <!-- TaxAuthorityAssoc methods -->
    <simple-method method-name="createTaxAuthorityAssoc" short-description="create a TaxAuthorityAssoc">
        <set value="_CREATE" field="securityAction"/>
        <check-permission permission="ACCOUNTING" action="${securityAction}">
            <fail-property resource="AccountingUiLabels" property="AccountingPermissionError"/>
        </check-permission>
        <check-errors/>

        <!-- SCIPIO: extra verification to help error message; REMOVED - re-add if needed again
        <set field="vvta.partyId" from-field="parameters.toTaxAuthPartyId"/>
        <set field="vvta.geoId" from-field="parameters.toTaxAuthGeoId"/>
        <call-simple-method method-name="verifyValidTaxAuthority"/>
        -->

        <make-value entity-name="TaxAuthorityAssoc" value-field="newEntity"/>
        <set-pk-fields map="parameters" value-field="newEntity"/>
        <if-empty field="newEntity.fromDate"><now-timestamp field="newEntity.fromDate"/></if-empty>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <create-value value-field="newEntity"/>
    </simple-method>
    <simple-method method-name="updateTaxAuthorityAssoc" short-description="update a TaxAuthorityAssoc">
        <set value="_UPDATE" field="securityAction"/>
        <check-permission permission="ACCOUNTING" action="${securityAction}">
            <fail-property resource="AccountingUiLabels" property="AccountingPermissionError"/>
        </check-permission>
        <check-errors/>

        <!-- SCIPIO: extra verification to help error message; REMOVED - re-add if needed again
        <if>
            <condition>
                <or>
                    <not><if-empty field="parameters.toTaxAuthPartyId"/></not>
                    <not><if-empty field="parameters.toTaxAuthGeoId"/></not>
                </or>
            </condition>
            <then>
                <set field="vvta.partyId" from-field="parameters.toTaxAuthPartyId"/>
                <set field="vvta.geoId" from-field="parameters.toTaxAuthGeoId"/>
                <call-simple-method method-name="verifyValidTaxAuthority"/>
            </then>
        </if>
        -->

        <entity-one entity-name="TaxAuthorityAssoc" value-field="lookedUpValue"/>
        <set-nonpk-fields map="parameters" value-field="lookedUpValue"/>
        <store-value value-field="lookedUpValue"/>
    </simple-method>
    <simple-method method-name="deleteTaxAuthorityAssoc" short-description="delete a TaxAuthorityAssoc">
        <set value="_DELETE" field="securityAction"/>
        <check-permission permission="ACCOUNTING" action="${securityAction}">
            <fail-property resource="AccountingUiLabels" property="AccountingPermissionError"/>
        </check-permission>
        <check-errors/>

        <entity-one entity-name="TaxAuthorityAssoc" value-field="lookedUpValue"/>
        <remove-value value-field="lookedUpValue"/>
    </simple-method>

    <!-- TaxAuthorityCategory methods -->
    <simple-method method-name="createTaxAuthorityCategory" short-description="create a TaxAuthorityCategory">
        <set value="_CREATE" field="securityAction"/>
        <check-permission permission="ACCOUNTING" action="${securityAction}">
            <fail-property resource="AccountingUiLabels" property="AccountingPermissionError"/>
        </check-permission>
        <check-errors/>

        <make-value entity-name="TaxAuthorityCategory" value-field="newEntity"/>
        <set-pk-fields map="parameters" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <create-value value-field="newEntity"/>
    </simple-method>
    <simple-method method-name="updateTaxAuthorityCategory" short-description="update a TaxAuthorityCategory">
        <set value="_UPDATE" field="securityAction"/>
        <check-permission permission="ACCOUNTING" action="${securityAction}">
            <fail-property resource="AccountingUiLabels" property="AccountingPermissionError"/>
        </check-permission>
        <check-errors/>

        <entity-one entity-name="TaxAuthorityCategory" value-field="lookedUpValue"/>
        <set-nonpk-fields map="parameters" value-field="lookedUpValue"/>
        <store-value value-field="lookedUpValue"/>
    </simple-method>
    <simple-method method-name="deleteTaxAuthorityCategory" short-description="delete a TaxAuthorityCategory">
        <set value="_DELETE" field="securityAction"/>
        <check-permission permission="ACCOUNTING" action="${securityAction}">
            <fail-property resource="AccountingUiLabels" property="AccountingPermissionError"/>
        </check-permission>
        <check-errors/>

        <set field="taxAuthorityRateProductMap.taxAuthGeoId" from-field="parameters.taxAuthGeoId"/>
        <set field="taxAuthorityRateProductMap.taxAuthPartyId" from-field="parameters.taxAuthPartyId"/>
        <set field="taxAuthorityRateProductMap.productCategoryId" from-field="parameters.productCategoryId"/>
        <find-by-and entity-name="TaxAuthorityRateProduct" map="taxAuthorityRateProductMap" list="taxAuthorityRateProductList"/>
        <if-empty field="taxAuthorityRateProductList">
            <entity-one entity-name="TaxAuthorityCategory" value-field="lookedUpValue"/>
            <remove-value value-field="lookedUpValue"/>
            <else>
                <add-error>
                    <fail-property resource="AccountingUiLabels" property="AccountingTaxAuthorityRateProductUseThisProductCategory"/>
                </add-error>
            </else>
        </if-empty>
        <check-errors/>
    </simple-method>

    <!-- TaxAuthorityGlAccount methods -->
    <simple-method method-name="createTaxAuthorityGlAccount" short-description="create a TaxAuthorityGlAccount">
        <set value="_CREATE" field="securityAction"/>
        <check-permission permission="ACCOUNTING" action="${securityAction}">
            <fail-property resource="AccountingUiLabels" property="AccountingPermissionError"/>
        </check-permission>
        <check-errors/>

        <!-- SCIPIO: 2017-04-24: special check for PK, to show comprehensible error msg -->
        <entity-one entity-name="TaxAuthorityGlAccount" value-field="lookedUpValue" auto-field-map="true"/>
        <if>
            <condition>
                <not><if-empty field="lookedUpValue"/></not>
            </condition>
            <then>
                <set field="taxAuthPartyId" from-field="parameters.taxAuthPartyId"/>
                <set field="taxAuthGeoId" from-field="parameters.taxAuthGeoId"/>
                <set field="organizationPartyId" from-field="parameters.organizationPartyId"/>
                <set field="glAccountId" from-field="parameters.glAccountId"/>
                <add-error>
                    <fail-property resource="AccountingErrorUiLabels" property="AccountingTaxAuthGlAccountAlreadyExists"/>
                </add-error>
                <check-errors/>
            </then>
        </if>

        <make-value entity-name="TaxAuthorityGlAccount" value-field="newEntity"/>
        <set-pk-fields map="parameters" value-field="newEntity"/>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <create-value value-field="newEntity"/>
    </simple-method>
    <simple-method method-name="updateTaxAuthorityGlAccount" short-description="update a TaxAuthorityGlAccount">
        <set value="_UPDATE" field="securityAction"/>
        <check-permission permission="ACCOUNTING" action="${securityAction}">
            <fail-property resource="AccountingUiLabels" property="AccountingPermissionError"/>
        </check-permission>
        <check-errors/>

        <entity-one entity-name="TaxAuthorityGlAccount" value-field="lookedUpValue"/>
        <set-nonpk-fields map="parameters" value-field="lookedUpValue"/>
        <store-value value-field="lookedUpValue"/>
    </simple-method>
    <simple-method method-name="deleteTaxAuthorityGlAccount" short-description="delete a TaxAuthorityGlAccount">
        <set value="_DELETE" field="securityAction"/>
        <check-permission permission="ACCOUNTING" action="${securityAction}">
            <fail-property resource="AccountingUiLabels" property="AccountingPermissionError"/>
        </check-permission>
        <check-errors/>

        <entity-one entity-name="TaxAuthorityGlAccount" value-field="lookedUpValue"/>
        <remove-value value-field="lookedUpValue"/>
    </simple-method>

    <!-- TaxAuthorityRateProduct methods -->
    <simple-method method-name="createTaxAuthorityRateProduct" short-description="create a TaxAuthorityRateProduct">
        <set value="_CREATE" field="securityAction"/>
        <check-permission permission="ACCOUNTING" action="${securityAction}">
            <fail-property resource="AccountingUiLabels" property="AccountingPermissionError"/>
        </check-permission>
        <check-errors/>

        <make-value entity-name="TaxAuthorityRateProduct" value-field="newEntity"/>
        <sequenced-id sequence-name="TaxAuthorityRateProduct" field="newEntity.taxAuthorityRateSeqId"/>
        <field-to-result field="newEntity.taxAuthorityRateSeqId" result-name="taxAuthorityRateSeqId"/>

        <set-nonpk-fields map="parameters" value-field="newEntity"/>
        <if-empty field="newEntity.fromDate">
            <now-timestamp field="newEntity.fromDate"/>
        </if-empty>
        <create-value value-field="newEntity"/>
    </simple-method>
    <simple-method method-name="updateTaxAuthorityRateProduct" short-description="update a TaxAuthorityRateProduct">
        <set value="_UPDATE" field="securityAction"/>
        <check-permission permission="ACCOUNTING" action="${securityAction}">
            <fail-property resource="AccountingUiLabels" property="AccountingPermissionError"/>
        </check-permission>
        <check-errors/>

        <entity-one entity-name="TaxAuthorityRateProduct" value-field="lookedUpValue"/>
        <set-nonpk-fields map="parameters" value-field="lookedUpValue"/>
        <store-value value-field="lookedUpValue"/>
    </simple-method>
    <simple-method method-name="deleteTaxAuthorityRateProduct" short-description="delete a TaxAuthorityRateProduct">
        <set value="_DELETE" field="securityAction"/>
        <check-permission permission="ACCOUNTING" action="${securityAction}">
            <fail-property resource="AccountingUiLabels" property="AccountingPermissionError"/>
        </check-permission>
        <check-errors/>

        <entity-one entity-name="TaxAuthorityRateProduct" value-field="lookedUpValue"/>
        <remove-value value-field="lookedUpValue"/>
    </simple-method>

    <!-- PartyTaxAuthInfo methods -->
    <simple-method method-name="createPartyTaxAuthInfo" short-description="create a PartyTaxAuthInfo">
        <set value="_CREATE" field="securityAction"/>
        <!-- SCIPIO: "Removed permission validation in service so that the user can set his own taxAuthority"
        <check-permission permission="ACCOUNTING" action="${securityAction}">
            <fail-property resource="AccountingUiLabels" property="AccountingPermissionError"/>
        </check-permission>-->

        <call-simple-method method-name="validatePartyTaxIdInline"/>

        <entity-one entity-name="TaxAuthority" value-field="taxAuth"/>
        <if-empty field="taxAuth">
            <add-error>
                <fail-property resource="PartyUiLabels" property="PartyTaxAuthPartyAndGeoNotAvailable"/>
            </add-error>
        </if-empty>

        <!-- done checking preliminary constraints, see if there are any errors -->
        <check-errors/>

        <make-value entity-name="PartyTaxAuthInfo" value-field="newEntity"/>
        <set-pk-fields map="parameters" value-field="newEntity"/>
        <if-empty field="newEntity.fromDate"><now-timestamp field="newEntity.fromDate"/></if-empty>
        <set-nonpk-fields map="parameters" value-field="newEntity"/>

        <create-value value-field="newEntity"/>
        <!-- SCIPIO: 2017-04-24: this service must output the fromDate when it's omitted so it can be re-queried -->
        <field-to-result field="newEntity.fromDate" result-name="fromDate"/>
    </simple-method>
    <simple-method method-name="updatePartyTaxAuthInfo" short-description="update a PartyTaxAuthInfo">
        <set value="_UPDATE" field="securityAction"/>
        <check-permission permission="ACCOUNTING" action="${securityAction}">
            <fail-property resource="AccountingUiLabels" property="AccountingPermissionError"/>
        </check-permission>

        <call-simple-method method-name="validatePartyTaxIdInline"/>

        <!-- done checking preliminary constraints, see if there are any errors -->
        <check-errors/>

        <entity-one entity-name="PartyTaxAuthInfo" value-field="lookedUpValue"/>
        <set-nonpk-fields map="parameters" value-field="lookedUpValue"/>
        <store-value value-field="lookedUpValue"/>
    </simple-method>
    <simple-method method-name="validatePartyTaxIdInline" short-description="validatePartyTaxIdInline">
        <!-- validate the partyTaxId based on TaxAuthority.taxIdFormatPattern if not empty -->
        <!-- If the party validated is in the UE, we could to a better job using the SOAP service from http://ec.europa.eu/taxation_customs/vies/faqvies.do#item16 -->
        <entity-one entity-name="TaxAuthority" value-field="taxAuthority"/>
        <if>
            <condition>
                <and>
                    <not><if-empty field="taxAuthority.taxIdFormatPattern"/></not>
                    <not><if-empty field="parameters.partyTaxId"/></not>
                    <not><if-regexp field="parameters.partyTaxId" expr="${taxAuthority.taxIdFormatPattern}"/></not>
                </and>
            </condition>
            <then>
                <add-error>
                    <fail-property resource="AccountingErrorUiLabels" property="AccountingTaxIdInvalidFormat"/>
                </add-error>
            </then>
        </if>
    </simple-method>

    <simple-method method-name="deletePartyTaxAuthInfo" short-description="delete a PartyTaxAuthInfo">
        <set value="_DELETE" field="securityAction"/>
        <check-permission permission="ACCOUNTING" action="${securityAction}">
            <fail-property resource="AccountingUiLabels" property="AccountingPermissionError"/>
        </check-permission>
        <check-errors/>

        <entity-one entity-name="PartyTaxAuthInfo" value-field="lookedUpValue"/>
        <remove-value value-field="lookedUpValue"/>
    </simple-method>

    <simple-method method-name="createCustomerTaxAuthInfo" short-description="Create a Customer PartyTaxAuthInfo">
        <script lang="groovy"><![CDATA[
            taxAuthPartyGeoIds = parameters.get("taxAuthPartyGeoIds");
            parameters.put("taxAuthPartyId", taxAuthPartyGeoIds.substring(0, taxAuthPartyGeoIds.indexOf("::")));
            parameters.put("taxAuthGeoId", taxAuthPartyGeoIds.substring(taxAuthPartyGeoIds.indexOf("::") + 2));
        ]]></script>
        <set-service-fields service-name="createPartyTaxAuthInfo" map="parameters" to-map="createPartyTaxAuthInfoMap"/>
        <call-service service-name="createPartyTaxAuthInfo" in-map-name="createPartyTaxAuthInfoMap" include-user-login="true"/>
    </simple-method>

    <!-- SCIPIO: 2017-04-21: new -->
    <simple-method method-name="verifyValidTaxAuthority" short-description="SCIPIO: verifies the given partyId + geoId is a valid TaxAuthority">
        <entity-one entity-name="TaxAuthority" value-field="verifiedTaxAuthority" auto-field-map="false">
            <field-map field-name="taxAuthPartyId" from-field="vvta.partyId"/>
            <field-map field-name="taxAuthGeoId" from-field="vvta.geoId"/>
        </entity-one>
        <if-empty field="verifiedTaxAuthority">
            <add-error>
                <fail-property resource="AccountingErrorUiLabels" property="AccountingUserGeoInvalidTaxAuthority"/>
            </add-error>
        </if-empty>
        <check-errors/>
    </simple-method>
</simple-methods>
