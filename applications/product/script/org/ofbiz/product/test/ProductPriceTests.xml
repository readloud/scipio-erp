<?xml version="1.0" encoding="UTF-8" ?>
<!--
This file is subject to the terms and conditions defined in the
files 'LICENSE' and 'NOTICE', which are part of this source
code package.
-->

<simple-methods xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:noNamespaceSchemaLocation="http://ofbiz.apache.org/dtds/simple-methods-v2.xsd">

    <simple-method method-name="testCalculateProductPrice" short-description="Test case for service calculateProductPrice" login-required="false">
        <set field="productId" value="CD-2002"/>
        <entity-one entity-name="Product" value-field="product"/>
        <set field="serviceCtx.product" from-field="product"/>
        <call-service service-name="calculateProductPrice" in-map-name="serviceCtx">
            <results-to-map map-name="resultMap"/>
        </call-service>
        <assert>
            <if-compare field="resultMap.defaultPrice" operator="equals" value="47.99" type="BigDecimal"/>
            <if-compare field="resultMap.listPrice" operator="equals" value="48" type="BigDecimal"/>
        </assert>
        <check-errors/>
    </simple-method>

    <simple-method method-name="testCalculateProductPriceOfVariantProduct" short-description="Test case for service calculateProductPrice, when product is a variant and does not have product price" login-required="false">
        <!-- If product is a variant and no price is set, then default price of virtual product will be set -->
        <set field="productId" value="SW-1006-3"/>
        <entity-one entity-name="Product" value-field="product"/>
        <set field="serviceCtx.product" from-field="product"/>
        <call-service service-name="calculateProductPrice" in-map-name="serviceCtx">
            <results-to-map map-name="resultMap"/>
        </call-service>
        <assert>
            <if-compare field="resultMap.defaultPrice" operator="equals" value="1.99" type="BigDecimal"/>
            <if-compare field="resultMap.listPrice" operator="equals" value="5.99" type="BigDecimal"/>
        </assert>
        <check-errors/>
    </simple-method>

    <simple-method method-name="testCalculateProductPriceOfVirtualProduct" short-description="Test case for service calculateProductPrice, when product is virtual and does not have product price set" login-required="false">
        <!--  If product is a virtual and no price is set then then the service return price of a variant product which have lowest DEFAULT_PRICE. It is also considered whether the product is discontinued for sale before using the lowest price against a variant for a virtual product  -->
        <set field="productId" value="DemoProduct"/>
        <entity-one entity-name="Product" value-field="product"/>
        <set field="serviceCtx.product" from-field="product"/>
        <call-service service-name="calculateProductPrice" in-map-name="serviceCtx">
            <results-to-map map-name="resultMap"/>
        </call-service>
        <assert>
            <if-compare field="resultMap.defaultPrice" operator="equals" value="10" type="BigDecimal"/>
        </assert>
        <check-errors/>
    </simple-method>
</simple-methods>
