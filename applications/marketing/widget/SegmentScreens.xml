<?xml version="1.0" encoding="UTF-8"?>
<!--
This file is subject to the terms and conditions defined in the
files 'LICENSE' and 'NOTICE', which are part of this source
code package.
-->

<screens xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:noNamespaceSchemaLocation="http://ofbiz.apache.org/dtds/widget-screen.xsd">

    <!-- SegmentGroup Find Screen -->
    <screen name="FindSegmentGroup">
        <section>            
            <actions>
                <property-map resource="MarketingUiLabels" map-name="uiLabelMap" global="true"/>
                <set field="activeSubMenuItem" value="FindSegmentGroup"/>
                <set field="title" value="${uiLabelMap.MarketingSegments}"/>
            </actions>
            <widgets>
                <decorator-screen name="CommonSegmentGroupDecorator" location="component://marketing/widget/sfa/CommonScreens.xml">
                    <decorator-section name="body">
                        <decorator-screen name="FindScreenDecorator" location="component://common/widget/CommonScreens.xml">
                            <decorator-section name="menu-bar">
                                <container style="button-bar">
                                    <link text="${uiLabelMap.MarketingSegmentGroupCreate}" target="viewSegmentGroup" style="${styles.link_nav} ${styles.action_add}"/>
                                </container>
                            </decorator-section>
                            <decorator-section name="search-options">
                                <platform-specific><html><html-template location="component://marketing/webapp/sfa/segment/FindMarketingSegment.ftl"/></html></platform-specific>
                            </decorator-section>
                            <decorator-section name="search-results">
                                <include-screen name="MarketingSegmentSearchResults"/>                        
                            </decorator-section>
                        </decorator-screen>
                    </decorator-section>
                </decorator-screen>
            </widgets>
        </section>
    </screen>
    
    <screen name="MarketingSegmentSearchResults">
        <section>
            <actions>
                <script location="component://marketing/webapp/marketing/WEB-INF/actions/segment/FindMarketingSegment.groovy"/>
            </actions>
            <widgets>         
                <platform-specific><html><html-template location="component://marketing/webapp/sfa/segment/MarketingSegmentList.ftl"/></html></platform-specific>
            </widgets>
        </section>
    </screen>
    
    <screen name="EditSegmentGroup">
        <section>
            <actions>
                <property-map resource="MarketingUiLabels" map-name="uiLabelMap" global="true"/>                
                <set field="segmentGroupId" from-field="parameters.segmentGroupId"/>
                <set field="productStoreId" from-field="parameters.productStoreId"/>
                <entity-one entity-name="SegmentGroup" value-field="segmentGroup"/>
                <set field="activeSubMenuItem" value="${groovy: context.segmentGroup ? 'SegmentGroup' : 'NewSegmentGroup'}"/>
                <set field="title" value="${uiLabelMap.MarketingSegment} ${segmentGroupId}"/>
            </actions>
            <widgets>
                <decorator-screen name="CommonSegmentGroupDecorator" location="component://marketing/widget/sfa/CommonScreens.xml">
                    <decorator-section name="body">
                        <screenlet>
                            <include-form name="EditSegmentGroup" location="component://marketing/widget/SegmentForms.xml"/>
                        </screenlet>
                    </decorator-section>
                </decorator-screen>
            </widgets>
        </section>
    </screen>

    <!-- SegmentGroupClass list Screen -->
    <screen name="listSegmentGroupClass">
        <section>
            <actions>
                <property-map resource="MarketingUiLabels" map-name="uiLabelMap" global="true"/>

                <set field="titleProperty" value="PageTitleFindSegmentGroup"/>
                <set field="activeSubMenuItem" value="SegmentGroupClassification"/>

                <set field="queryString" from-field="result.queryString"/>
                <set field="viewIndex" from-field="parameters.VIEW_INDEX" type="Integer"/>
                <property-to-field resource="widget" property="widget.form.defaultViewSize" field="viewSizeDefaultValue"/>
                <set field="viewSize" from-field="parameters.VIEW_SIZE" type="Integer" default-value="${viewSizeDefaultValue}"/>
                <set field="segmentGroupId" from-field="parameters.segmentGroupId"/>
            </actions>
            <widgets>
                <decorator-screen name="CommonSegmentGroupDecorator" location="component://marketing/widget/sfa/CommonScreens.xml">
                    <decorator-section name="body">
                        <screenlet id="AddSegmentGroupClassPanel" title="${uiLabelMap.MarketingSegmentGroupClassCreate}" collapsible="true">
                            <include-form name="AddSegmentGroupClass" location="component://marketing/widget/SegmentForms.xml"/>
                        </screenlet>
                        <include-form name="listSegmentGroupClass" location="component://marketing/widget/SegmentForms.xml"/>
                    </decorator-section>
                </decorator-screen>
            </widgets>
        </section>
    </screen>

    <!-- SegmentGroupGeo list Screen -->
    <screen name="listSegmentGroupGeo">
        <section>
            <actions>
                <property-map resource="MarketingUiLabels" map-name="uiLabelMap" global="true"/>

                <set field="titleProperty" value="PageTitleListSegmentGroupGeo"/>
                <set field="activeSubMenuItem" value="SegmentGroupGeo"/>
                <set field="queryString" from-field="result.queryString"/>
                <set field="viewIndex" from-field="parameters.VIEW_INDEX" type="Integer"/>
                <property-to-field resource="widget" property="widget.form.defaultViewSize" field="viewSizeDefaultValue"/>
                <set field="viewSize" from-field="parameters.VIEW_SIZE" type="Integer" default-value="${viewSizeDefaultValue}"/>
                <set field="segmentGroupId" from-field="parameters.segmentGroupId"/>
            </actions>
            <widgets>
                <decorator-screen name="CommonSegmentGroupDecorator" location="component://marketing/widget/sfa/CommonScreens.xml">
                    <decorator-section name="body">
                        <screenlet id="AddSegmentGroupGeoPanel" title="${uiLabelMap.PageTitleEditSegmentGroupGeo}" collapsible="true">
                            <include-form name="AddSegmentGroupGeo" location="component://marketing/widget/SegmentForms.xml"/>
                        </screenlet>
                        <include-form name="listSegmentGroupGeo" location="component://marketing/widget/SegmentForms.xml"/>
                    </decorator-section>
                </decorator-screen>
            </widgets>
        </section>
    </screen>

    <!-- SegmentGroupRole list Screen -->
    <screen name="listSegmentGroupRole">
        <section>
            <actions>
                <property-map resource="MarketingUiLabels" map-name="uiLabelMap" global="true"/>

                <set field="titleProperty" value="PageTitleListSegmentGroupRole"/>
                <set field="activeSubMenuItem" value="SegmentGroupRole"/>
                <set field="queryString" from-field="result.queryString"/>
                <set field="viewIndex" from-field="parameters.VIEW_INDEX" type="Integer"/>
                <property-to-field resource="widget" property="widget.form.defaultViewSize" field="viewSizeDefaultValue"/>
                <set field="viewSize" from-field="parameters.VIEW_SIZE" type="Integer" default-value="${viewSizeDefaultValue}"/>
                <set field="segmentGroupId" from-field="parameters.segmentGroupId"/>
            </actions>
            <widgets>
                <decorator-screen name="CommonSegmentGroupDecorator" location="component://marketing/widget/sfa/CommonScreens.xml">
                    <decorator-section name="body">
                        <screenlet id="AddSegmentGroupRolePanel" title="${uiLabelMap.PageTitleEditSegmentGroupRole}" collapsible="true">
                            <include-form name="AddSegmentGroupRole" location="component://marketing/widget/SegmentForms.xml"/>
                        </screenlet>
                        <include-form name="listSegmentGroupRole" location="component://marketing/widget/SegmentForms.xml"/>
                    </decorator-section>
                </decorator-screen>
            </widgets>
        </section>
    </screen>
</screens>
